Clutter 1.14.0                                                       2013-03-25
===============================================================================

  • List of changes since Clutter 1.13.10

    - Require Cogl ≥ 1.14.0

    - Translation updates
    Tadjik, Slovak, Latvian, Hindi.

Many thanks to all the contributors of the 1.13 development cycle:

  Jasper St. Pierre, Emanuele Aina, Daniel Stone, Chun-wei Fan, Rob Bradford,
  Adel Gadllah, Gheyret Kenji, Piotr Drąg, Rui Matos, Tomeu Vizoso, Wouter
  Paesen, Alejandro Piñeiro, Fran Diéguez, Kouhei Sutou, Lionel Landwerlin,
  Milo Casagrande, Neil Roberts, Wolfgang Stöggl, Aleksej Kabanov, Alexander
  Shopov, Alexandre Franke, Andika Triwidada, Ask H. Larsen, Aurimas Černius,
  Bastien Nocera, Carles Ferrando, Chao-Hsiung Liao, Christian Kirbach, Damien
  Lespiau, Daniel Mustieles, Dimitris Spingos, Duarte Loreto, Gil Forcada,
  Guillaume Desmottes, Ihar Hrachyshka, Josselin Mouette, Ján Kyselica, Marek
  Černocký, Mario Blättermann, Matej Urbančič, Nilamdyuti Goswami, Nirbheek
  Chauhan, OKANO Takayoshi, Owen W. Taylor, Rafael Ferreira, Rajesh Ranjan,
  Rūdolfs Mazurs, Sebastian Keller, Tristan Van Berkom, Victor Ibragimov,
  Yanko Kaneti, Мирослав Николић.

Clutter 1.13.10                                                      2013-03-18
===============================================================================

  • List of changes since Clutter 1.13.8

    - Fix a typo in the ClutterTimeline::stopped signal declaration
    The "stopped" signal was using the ClutterTimelineClass.completed virtual
    function pointer slot, instead of the correct .stopped one, thus making
    subclasses of ClutterTimeline unable to override the default handler for
    the signal.

    - Use the XKB groups state when computing key modifiers on X11
    This allows getting the correct key symbol for high order groups.

    - Fixes for the Visual Studio build

    - Documentation and introspection fixes

    - Add a function to disable accessibility
    This allows using Clutter with an embedding toolkit that is also using
    ATK, like GTK+, without confusing the accessibility infrastructure.

    - Performance improvements
    ClutterActor now tries to minimize the amount of redraws queued on
    unmapped actors, unless the actors have Clones, or are part of a cloned
    branch of the scene graph.

    - Translation updates
    Uyghur, Belarusian, Catalan, Indonesian, Assamese, Portuguese, Danish,
    Catalan.

  • List of bugs fixed since Clutter 1.13.8

    #695158 - Animated property transitions cause the animated actor to be
              leaked
    #695260 - x11/xi2: Factor the XKB group state in to fill events'
              modifier_state
    #695188 - event: Use gunichar when dealing with unicode characters
    #691468 - No accessible key events
    #695838 - clutter: Prefer the X11 backend to the Wayland one
    #695870 - commit "actor: Skip transitions on invisible actors" breaks
              working code - reproducer included
    #695982 - Fix transition-z property setting

Many thanks to:

  Chun-wei Fan, Alejandro Piñeiro, Andika Triwidada, Ask H. Larsen, Bastien
  Nocera, Carles Ferrando, Duarte Loreto, Gheyret Kenji, Gil Forcada, Ihar
  Hrachyshka, Jasper St. Pierre, Lionel Landwerlin, Nilamdyuti Goswami, Rui
  Matos

Clutter 1.13.8                                                       2013-03-04
===============================================================================

  • List of changes since Clutter 1.13.6

    - Use ClutterActor:child-transform with ClutterScrollActor
    The ScrollActor class now uses the :child-transform property to translate
    its children when scrolling. This simplifies the code, and makes it more
    robust with regards to clipped redraws.

    - Add progress-based marker API to ClutterTimeline
    Allow adding a marker to a Timeline instance using the normalized progress
    value between the beginning and the end of the timeline's duration.

    - Allow building Wayland compositor and client support together
    Instead of having to require two separate builds.

    - Documentation fixes

    - Translations update
    Czech, Traditional Chinese (Hong Kong and Taiwan), German.

  • List of bugs fixed since Clutter 1.13.6

    #695158 - Animated property transitions cause the animated actor to be
              leaked
    #695119 - text: Fix PangoFontDescription leak
    #694267 - The search entry no longer reacts to layout switches
    #692851 - wayland backend & compositor support can't be built together
    #694319 - Add progress-based marker API to ClutterTimeline
    #686225 - ClutterScrollActor scrolls itself instead of just its contents

Many thanks to:

  Daniel Stone, Chao-Hsiung Liao, Marek Černocký, Mario Blättermann, Rui Matos.

Clutter 1.13.6                                                       2013-02-20
===============================================================================

  • List of changes since Clutter 1.13.4

    - Perform the picking in a separate buffer
    By using a separate buffer we can maintain the back buffer in a stable
    state, and recycle its contents when doing clipped redraws; this should
    improve performance and reduce tearing.

    - Add experimental API for changing the draw timing
    This API can be used to delay the next frame to a specific point in time,
    instead of immediately.

    - Always request XInput 2.3 on the X11 backend
    If XInput is available, we should request the latest version.

    - Translation updates
    Serbian, Brazilian Portuguese, Uyghur, Lithuanian, Italian, French,
    Polish, Galician.

  • List of bugs fixed since Clutter 1.13.4

    #692466 - clutter: Add "support" for XI2.3
    #692971 - x11/device-manager-xi2: Fix slave to master association
    #669122 - Clipped redraws and tearing
    #693348 - evdev: Fix use of the common XKB code for the evdev device
    #692901 - Add clutter_stage_set_sync_delay()
    #693696 - Fix startup with gnome-shell and cogl-1.14
    #693767 - tests fail on new unexpected symbols
    #694187 - double-typed constant where enum is expected
    #693741 - wayland: Unable to run conform suite on Wayland unless [X]
              DISPLAY set
    #694229 - Don't do anything special with COGL_ENABLE_EXPERIMENTAL_2_0_API
    #687652 - cogl: Don't use cogl_xlib_set_diplay()
    #694237 - actor: Fix clutter_actor_allocate_align_fill for
              partially-filled actors

Many thanks to:

  Adel Gadllah, Jasper St. Pierre, Gheyret Kenji, Milo Casagrande, Neil
  Roberts, Alexandre Franke, Aurimas Černius, Damien Lespiau, Fran Diéguez,
  Josselin Mouette, Owen W. Taylor, Piotr Drąg, Rafael Ferreira, Rob Bradford,
  Rui Matos, Sebastian Keller, Yanko Kaneti, Мирослав Николић.

Clutter 1.13.4                                                       2013-01-16
===============================================================================

  • List of changes since Clutter 1.13.2

    - Build fixes for the Windows backend.
    Including fixes for building with Visual Studio.

    - Fix for the fullscreen support of the ClutterStage on Windows.

    - Documentation fixes.

    - Use XFixes to show and hide the cursor on X11 backends.

    - Allow setting Pango attributes on editable ClutterText actors.

    - Translation updates
    Russian, Bulgarian, Spanish, Greek, Galician, Slovenia, Polish.

  • List of bugs fixed

    #690735 - ClutterSwipeAction is broken
    #691651 - Fix a typo in CLUTTER_STAGE_STATE document
    #686477 - pango attributes in ClutterText cannot be set while editable
    #690836 - clutter_stage_set_fullscreen on a win32 stage does not function
              correctly
    #690835 - mingw build from git master fails with "no previous declaration
              for 'DllMain'"
    #690833 - missing include file clutter-shader.h in clutter-backend-win32.c
    #691114 - "(constructor)" tag for clutter_color_alloc() is missing
    #690664 - x11: Ignore num lock / scroll lock for event state
    #690497 - use XFixes for hiding the cursor

Many thanks to:

  Jasper St. Pierre, Wouter Paesen, Chun-wei Fan, Emmanuele Bassi, Kouhei
  Sutou, Aleksej Kabanov, Alexander Shopov, Daniel Mustieles, Daniel Stone,
  Dimitris Spingos, Fran Diéguez, Matej Urbančič, Nirbheek Chauhan, Piotr
  Drąg, Tomeu Vizoso.

Clutter 1.13.2                                                       2012-12-18
===============================================================================

  • List of changes since Clutter 1.12

    - Add ClutterTapAction, a gesture recogniser for single touch taps.

    - Add ClutterSwipeAction::swipe
    This new signal has a boolean return value, and brings the SwipeAction in
    line with the rest of the GestureAction sub-classes. The ::swept signal
    has also been deprecated.

    - Enable XInput 2.x support by default
    Instead of using Xlib core events. The clutter_x11_enable_xinput() function
    now does not do anything; it's possible to disable XInput support by using
    the CLUTTER_DISABLE_XINPUT environment variable.

    - Documentation fixes

  • List of bugs fixed since 1.12

    #679439 - Single-threaded clutter programs fail on platforms which don't
              permit unlocking an already unlocked mutex
    #685589 - Off-stage touch events are not delivered
    #685554 - Assertion failure when trying to cancel an already started gesture
    #685028 - Let users and subclasses set a custom threshold on GestureAction
    #685221 - Points get stuck in th tracking array when returning FALSE from
              ::gesture-progress
    #683948 - Add TapAction as subclass of GestureAction to deprecate
              ClickAction
    #685737 - Export the last event for each touch point on GestureAction
    #686776 - Shouldn't annotate constructor of GInitiallyUnowned subclasses
    #689073 - Fix clutter_actor_allocate_align_fill() with actors exactly
              between 2 pixels
    #685186 - tests: Print touch sequences in test-events
    #689258 - xi2: Reset the correct scroll axes on DeviceChanged
    #689061 - Some fixes and API additions for ClutterPanAction
    #689316 - Strange issues with margins
    #689399 - text: Prevent a relayout if font descriptions or attrs are equal
    #689496 - Fixes for Coverity
    #690214 - clutter_actor_apply_transform() fails to rollback the pivot
              translation if an explicit transform has been set
    #673838 - Enable XInput support by default
    #686692 - Clutter 1.12.2 compilation fails in evdev backend
    #685982 - ClutterActor::transitions-completed isn't called for implicit
              transitions
    #688457 - clutter_get_current_event() returns NULL on TOUCH_BEGIN
    #689392 - swipe-action: Introduce new ::swipe signal

Many thanks to:

  Emanuele Aina, Jasper St. Pierre, Emmanuele Bassi, Daniel Stone, Chun-wei
  Fan, Rob Bradford, Tomeu Vizoso, Wolfgang Stöggl, Alejandro Piñeiro,
  Christian Kirbach, Guillaume Desmottes, Lionel Landwerlin, Marek Černocký,
  Milo Casagrande, Nishio Futoshi, OKANO Takayoshi, Piotr Drąg, Rūdolfs Mazurs,
  Tristan Van Berkom.

Clutter 1.12.0                                                       2012-09-24
===============================================================================

  • List of changes since Clutter 1.11.16

    - Fix the device tracking for core X11 pointers
    If a master input device can emit both touch and pointer events we end up
    in an inconsistent state; we should account for this case when tracking
    the stage that contains the events of each input device.

    - Respect text direction in BinLayout
    The text direction of the children of an actor using the BinLayout layout
    manager should be taken into account, both when using the Actor's align
    flags and when using the legacy BinAlignment flags.

    - Translations updates
    Hindi, Telugu, Catalan, Malayalam, Japanese, Bulgarian, Kannada.

  • List of bugs fixed since Clutter 1.11.16

    #684214 - messageTray: Fix summary position in RTL locales
    #684552 - Track coordinates and device ids in test-events
    #684530 - Print device number in debug messages from input-device
    #684509 - Mouse events lost after touch event from virtual core pointer

Many thanks to:

  Emanuele Aina, Emmanuele Bassi, Alexander Shopov, Ani Peter,
  Carles Ferrando, Chandan Kumar, Gil Forcada, Krishnababu Krothapalli,
  Nishio Futoshi, Shankar Prasad.

Clutter 1.11.16                                                      2012-09-17
===============================================================================

  • List of changes since Clutter 1.11.14

    - Fixes for gesture-based actions
    Ensure that the ClutterPanAction::pan-stopped signal is emitted before
    the ClutterGestureAction::gesture-begin signal, in case a new gesture
    starts; this requires adding a new state to ClutterGestureAction, the
    gesture-prepare state.

    - Ensure modified Enter keys do not end up in the Text buffer
    For single-line ClutterText actors.

    - Add touch event support to ClutterClickAction

    - Updated translations
    British English, Indonesian, Traditional Chinese (Hong Kong and Taiwan),
    French, Serbian, Russian, German, Slovenian, Brazilian Portuguese, Greek,
    Portuguese, Belarusian, Assamese, Danish.

  • List of bugs fixed since Clutter 1.11.14

    #683301 - stage: Normalize key focus setting
    #683430 - CLUTTER_GESTURE_ACTION_GET_CLASS() calls
              G_TYPE_INSTANCE_GET_PRIVATE() instead of
              G_TYPE_INSTANCE_GET_CLASS()
    #683431 - PanAction::pan-stopped sometimes is emitted before
              ::gesture-begin
    #683471 - All gestures get cancelled after missing a button release event
    #682161 - ClutterImage overflows beyond its actor's allocation
    #623344 - Search incorrectly handles input
    #683869 - test-events does not track touch events
    #683870 - test-events only reports up/down scrolls
    #683936 - ClickAction doesn't support touch events
    #683937 - Wrong format identifiers in debug messages in
              clutter_stage_allocate()

Many thanks to:

  Emanuele Aina, Emmanuele Bassi, Alexandre Franke, Ask H. Larsen, Bruce Cowan,
  Chao-Hsiung Liao, Christian Kirbach, Debarshi Ray, Dirgita, Duarte Loreto,
  Enrico Nicoletto, Ihar Hrachyshka, Jasper St. Pierre, Martin Srebotnjak,
  Matej Urbančič, Nilamdyuti Goswami, Rui Matos, Tom Tryfonidis, Yuri Myasoedov,
  Мирослав Николић.

Clutter 1.11.14                                                      2012-09-03
===============================================================================

  • List of changes since Clutter 1.11.12

    - Fixes for the touch sequence handling
    The stage associated with an input device is now set when a touch sequence
    begins, and cleared when the last touch sequence ends.

    - Add interpolation for matrices
    Using the CSS3 Transforms specification for decomposing matrices and
    interpolating the resulting transformations. This allows animating
    properties like ClutterActor:transform and ClutterActor:child-transform.

    - Add ClutterPanAction
    The PanAction is a gesture recogniser that allows panning children of
    a "scrollable" viewport.

    - Add more accessors to GestureAction for its subclasses
    GestureAction now allows retrieving the velocity and delta of pointer,
    as well as the event sequences and devices involved in the gesture. This
    allows writing more complex gesture recognisers. It is also possible, now,
    to ask a GestureAction to cancel the current gesture programmatically,
    e.g. from a timer.

    - Fix ClutterTableLayout.pack() with negative row/column
    Using a negative number to appen an actor into a TableLayout was causing
    additional rows and columns to be appended, due to an off by one error.

    - Fix press coordinates when using ClutterDragAction with a drag handle
    The transformation of the coordinates is now done using the drag actor,
    as it was supposed to be.

    - Documentation and annotation fixes

    - Deprecate the ClutterActor::pick signal
    Similarly to the ClutterActor::paint signal, it's now discouraged to
    connect to the ClutterActor::pick signal; connecting to the pick signal
    will raise a warning when using the CLUTTER_ENABLE_DIAGNOSTIC environment
    variable.

    - Updated translations
    Lithuanian, Indonesian, Traditional Chinese (Hong Kong and Taiwan),
    Polish, Spanish, Assamese, Greek, Spanish, Polish, Galician,
    Belarusian.

  • List of bugs fixed since Clutter 1.11.12

    #682795 - Annotation problem for clutter_actor_iter_next() and
              clutter_actor_iter_prev()
    #682754 - ClutterRotateAction wrong marshaller usage
    #681746 - Drag handle misplacemente in examples/drag-action
    #679990 - clutter_table_layout_pack increments column/row count by two
    #681648 - add Pan action
    #683219 - Build failure with old (?) XI2
    #683066 - brightness-contrast-effect: Don't actually run if it will have
              no effect
    #683090 - gesture-action: Add API for cancelling a gesture
    #683126 - Remove tracking of input devices and sequences from the stage
    #682362 - Multi touch events skipped
    #683113 - Bug in ClutterGestureAction documentation
    #680255 - The middle and right mouse buttons are swapped when using the
              evdev backend

Many thanks to:

  Emanuele Aina Piotr Drąg, Lionel Landwerlin, Aurimas Černius,
  Daniel Mustieles, Jasper St. Pierre, Neil Roberts, Nilamdyuti Goswami,
  Tomeu Vizoso, Andika Triwidada, Andre Kuehne, Chao-Hsiung Liao, Chun-wei Fan,
  Fran Diéguez, Ihar Hrachyshka, Tom Tryfonidis.


Clutter 1.11.12                                                      2012-08-20
===============================================================================

  • List of changes since Clutter 1.11.10

    - ClutterBinLayout honours the fixed-position of actors
    The ClutterBinLayout now checks if the :fixed-position-set property of a
    ClutterActor is set, and will use the fixed position when computing the
    allocation, without requiring an explicit CLUTTER_BIN_ALIGNMENT_FIXED
    alignment policy.

    - Soft-deprecation of ClutterGeometry
    The ClutterGeometry boxed type is a bad rectangle type, with known issues
    when used for unioning and intersecting; Clutter uses the type in signals
    and properties, so we cannot fully deprecate it. The documentation has
    been amended, and API using ClutterGeometry has been deprecated where it
    makes sense.

    - Deprecate the ClutterActor::paint signal
    The class handler for ClutterActor::paint is still available, but
    connecting to the ::paint signal directly is strongly discouraged, and
    will emit warnings if the CLUTTER_ENABLE_DIAGNOSTIC environment variable
    is set. Notifications of a full paint for the Stage should happen only
    through the repaint functions.

    - Ensure we associate input devices to the stage on touch events
    Like we do for crossing events for pointer devices, beginning and ending
    a touch sequence should associate the input device to the stage.

    - Allow constraining a DragAction to an area
    Similarly to how we allow constraining the dragging to an axis, we can
    also constrain the dragging to a specific area, expressed in
    parent-relative coordinates.

    - Do not handle events on ClutterText if :selectable is FALSE
    If the ClutterText:selectable property is FALSE we should only reposition
    the cursor, and avoid the whole drag-to-select event handling.

    - Add ClutterActor:child-transform
    The :child-transform property allows applying an initial transformation
    to the children of an actor, but not to the actor itself.

    - Fix height-for-width policy in ClutterBinLayout

    - Add ClutterZoomAction
    An action that implements the pinch gesture to scale an actor up or
    down through two touch points.

    - Documentation fixes

    - Translations update
    Assamese, Indonesian, Ukranian, Traditional Chinese translation (Hong
    Kong and Taiwan), Spanish, Galician, Serbian.

  • List of bugs fixed since Clutter 1.11.10

    [bugzilla.gnome.org]
    #681584 - clutter touch events tests slows down a lot after some use
    #681074 - Call clutter_input_device_update_from_event from
              clutter_x11_handle_event
    #681168 - ClutterDragAction: allow constraining the movement of the
              dragged actor
    #682070 - clutter-text: Make sure to paint the background of a text actor
    #682265 - ClutterBinLayout not honoring ClutterActor position set through
              clutter_actor_set_position
    #679483 - ClutterBoxLayout does not do height-for-width properly
    #678427 - Zoom action
    #681814 - ClutterDragAction causes crashes when drag actor is destroyed
              at drag-end time

Many thanks to:

  Nilamdyuti Goswami, Daniel Mustieles, Fran Diéguez, Chao-Hsiung Liao,
  Daniel Korostil, Dirgita, Duarte Loreto, Giovanni Campagna,
  Jasper St. Pierre, Lionel Landwerlin, Sjoerd Simons, Tristan Van Berkom,
  Мирослав Николић.

Clutter 1.11.10                                                      2012-08-07
===============================================================================

  • List of changes since Clutter 1.11.8

    - Add support for multiple touch points in GestureAction
    GestureAction subclasses can now define the number of touch points they
    require in order to start recognising a gesture.

    - Add a RotateAction
    A GestureAction subclass that requires two touch points to rotate the
    actor to which it has been applied.

    - Generate crossing events for touch devices

    - Respect ClutterStage.set_motion_events_enabled() for touch events

    - Fix a regression in discrete scroll events emission
    When using XInput 2, the scroll events generated through buttons (e.g.
    mouse wheel) should only be emitted on ButtonPress, to match the semantics
    of the X11 core device handling.

    - Add progress functions defined in CSS3-Transitions
    The CSS3 Transitions specification defines various timing functions:

      steps                     cubic-bezier
      step-start                ease
      step-end                  ease-in
                                ease-out
                                ease-in-out

    These are now available to be used with ClutterTimeline.

    - Add ClutterActor::transition-stopped
    The ::transition-stopped signal is emitted each time a Transition
    associated to an actor is stopped (using the same sematincs as the
    ClutterTimeline::stopped signal); it is also a detailed signal, so that
    it's possible to connect a handler for a specific Transition name.

    - Add ClutterActor.transform
    The :transform property allows overriding all the decomposed
    transformations of an actor, like scale and rotate; the transformation
    is applied relative to the actor's allocated origin and pivot point.

    - Documentation and build fixes

    - Translations update
     Traditional Chinese (Hong Kong and Taiwan), Spanish, Galician,
     Serbian, Greek.

  • List of bugs fixed since Clutter 1.11.8

    [bugzilla.gnome.org]
    #678586 - Modifiy ClutterGestureAction to support multi touch and multiple
              points
    #680088 - Duplicate mouse wheel scroll events with xinput enabled
    #678587 - Add ClutterRotationAction
    #679797 - Missing enter/leave events generation for touch events
    #680174 - Add clutter_event_is_pointer_emulated() to distinguish emulated
              scroll events
    #680751 - clutter_stage_set_motion_events_enabled() is not honoured with
              CLUTTER_TOUCH_UPDATE events
    #680752 - Touch cancel events are not processed by Clutter

Many thanks to:

  Lionel Landwerlin, Chao-Hsiung Liao, Tom Tryfonidis, Мирослав Николић,
  Daniel Mustieles, Emanuele Aina, Fran Diéguez, Piotr Drąg.

Clutter 1.11.8                                                       2012-07-16
===============================================================================

  • List of changes since Clutter 1.11.6

    - Bump the dependency of ATK
    Use the newly released 2.5.3 to rely on the generci event listeners
    that have been added to ATK; this avoids reimplementing our own.

    - Ensure validity of iterators
    Even when they are copied.

    - Rounding error fixes for allocations
    Constraints and other code adjusting the allocation of an actor should
    round the origin and size of the ClutterActorBox in a consistent way.

    - Updates for the VisualStudio build files

    - Add ClutterDragAction::drag-progress
    The ::drag-progress signal allows controlling the emission of the
    ::drag-motion signal. Overriding the default behaviour of a DragAction
    is now possible without calling g_signal_stop_emission_by_name().

    - Add ClutterActor:pivot-point
    The pivot point of ClutterActor provides a center, in normalized
    coordinate space, for the transformations of an actor (scaling, rotation,
    translation).

    - Deprecations
    ClutterText:position has been deprecated by ClutterText:cursor-position,
    for consistency with other ClutterText properties, as well as to avoid
    shadowing the ClutterActor:position property. ClutterActor:depth has
    been deprecated by ClutterActor:z-position. ClutterTexture has been
    deprecated in favour of ClutterImage. ClutterActor:anchor-[xy] and the
    transformation centers for rotation and scaling have been deprecated
    in favour of the ClutterActor:pivot-point. The clutter_threads_enter()
    and clutter_threads_leave() functions have been deprecated.

    - Removal of the experimental ClutterLayoutManager easing state API
    The easing state API for ClutterLayoutManager was added in 1.11.2, but
    with the introduction of a default easing state for ClutterActor it is
    now redundant and not necessary; to animate the allocation of an actor
    during layout it's simply necessary to set its easing state. All layout
    managers provided by Clutter have been updated.

  • List of bugs fixed since Clutter 1.11.6

    [bugzilla.gnome.org]
    #679451 - Add ::drag-progress signal
    #679457 - Add :cursor-position and deprecate :position
    #679465 - Add :z-position and deprecate :depth
    #677853 - Use a single transformation center for rotation and scaling

Many thanks to:

  Chun-wei Fan, Alejandro Piñeiro, Alexander Shopov, Andika Triwidada,
  Chao-Hsiung Liao, Daniel Mustieles, Fran Diéguez, Ihar Hrachyshka,
  Kjartan Maraas, Piotr Drąg, Sasi Bhushan Boddepalli.

Clutter 1.11.6                                                       2012-06-23
===============================================================================

  • List of changes since Clutter 1.11.4

    - Accessibility fixes
    Clean up key listeners; implement AtkText missing methods for getting text
    before and after a given offset.

    - Ensure that ClutterBinLayout honours the fixed positioning

    - Improvements in GridLayout

    - Improve debugging messages
    We now print out the name, type, and pointer address of each actor when
    emitting debugging messages; also, all messages within one second are
    grouped together and show the delta instead of a full timestamp, to
    improve readability.

    - Add ClutterActor:content-repeat
    The content-repeat property can be used by a ClutterContent implementation
    to control the repeating of the content's data or pattern. ClutterImage
    and ClutterCanvas honour this property.

    - Explicit animation API improvements
    ClutterTransition will now ask the ClutterAnimatable associated to it
    for its initial or final state, in case either is missing; also, the
    interpolated value will be coerced to the correct property type instead
    of generating a warning.

    - Switch to lcov for test coverage

    - Remove an extra reference on ClutterStage
    The reference added during dispose introduced a leak in case a stage was
    destroyed.

    - Improve touch event support
    New API to install a grab on a specific event sequence of an input device;
    ClutterText now responds to touch events; ClutterDragAction and
    ClutterDropAction also use touch events as well as pointer events. The
    conformance and interactive test suites now have units for checking touch
    event handling.

  • List of bugs fixed since Clutter 1.11.4

    #677659 - add user_data parameter to ClutterBindingActionFunc
    #677778 - Assorted introspection fixes from Vala
    #677921 - tests: link test-conformance against libm
    #675183 - Duplicate accessible key events
    #678391 - tests: no return in non-void function
    #678423 - 1.10.8 needs fix on osx ... clutter_x11_enable_xinput not
              available
    #678439 - crash in event translation
    #678264 - actor: Make margin properties animatable
    #677221 - Orca does not present run dialog text
    #678047 - Add touch events vfunc on ClutterActor
    #678049 - Add touch events support to Drag & Drop actions
    #678279 - Add grab API on touch sequences
    #678278 - Add touch events support to ClutterText

Many thanks to:

  Alejandro Piñeiro, Alexander Larsson, Lionel Landwerlin, Bastian Winkler,
  Tomeu Vizoso, Evan Nemerson, Andy Wingo, Daniel Mustieles, Danielle Madeley,
  Dimitris Spingos, Fran Diéguez, Frédéric Péters, Ihar Hrachyshka,
  Jasper St. Pierre, Matthias Clasen, Sasi Bhushan Boddepalli, Tom Tryfonidis

Clutter 1.11.4                                                       2012-06-05
===============================================================================

  • List of changes since Clutter 1.11.2

    - Multi-touch support fixes
    The clutter_event_copy() code was copying the wrong axis data; the correct
    touch device was not used when translating axis data from XInput2 to the
    ClutterInputDevice; touch events were not delivered to the correct actors.

    - Add ClutterDropAction::drop-cancel signal
    The ::drop-cancel does what it says on the tin: it allows handling a
    cancelled drop action, instead of relying on the drag end signal on
    the ClutterDragAction.

    - Add examples in the repository
    Clutter has been using some interactive tests as examples of idiomatic
    usage, both as standalone code and for inclusion inside the API reference
    documentation; this is sub-optimal, as the interactive tests are meant to
    exercise the API and its behaviour, not as an example of how to write
    proper Clutter code. For this reason, we now have an examples/ directory
    that contains example code that can be used to learn Clutter.

    - Allow disabling the tests and examples when building Clutter
    This should help cross-compilation and testing.

    - Fix the preferred size to always include the actor's margin

    - Fix picking of the ClutterScrollActor

    - Add implicit animations for the color properties of ClutterText
    Changing any color-related properties of a ClutterText actor will result
    in a transition, if the easing state has a non-zero duration.

    - Layout managers should respect the child expand and align properties
    ClutterBinLayout, ClutterBoxLayout, and ClutterTableLayout should use the
    ClutterActor [xy]-expand and [xy]-align properties, and deprecate their
    own.

    - Make all layout managers respect the child easing state when allocating
    ClutterLayoutManager also has properties that can be set to control all
    the children's default easing state.

    - Add ClutterTimeline::stopped signal
    The ::stopped signal is emitted either when a Timeline reaches full
    completion, including eventual repeats; or when the Timeline has been
    stopped through clutter_timeline_stop(). A boolean argument passed to
    the signal handlers should be used to distinguish the two cases.

    - Add ClutterGridLayout
    This layout manager implements the same layout policy of GtkGrid.

    - Fixes for ClutterKeyframeTransition

    - Documentation fixes

    - Fixes for building Clutter with Visual Studio
    Including the GDK backend.

    - Fixes for the Mac backend
    Chain up to get a Cogl context after creating a GL context; this seems
    to be enough to make the interactive tests run.

  • List of bugs fixed since Clutter 1.11.2

    [bugzilla.gnome.org]
    #675336 - ClutterDropAction needs a ::drop-cancel signal
    #675371 - Asserts when getting touch events
    #676088 - Fixing picking in scroll-actor "breaks" gnome-control-center
    #676032 - keyframe-transition: Documentation fixes
    #676031 - keyframe-transition: Create a new interval if necessary
    #676158 - table-layout: Remove unused animation helpers
    #676334 - scroll-actor: Fix ->transition not being reset
    #675890 - Passing NULL buffer to clutter_text_set_text() will not reset
              the buffer and segfault
    #676367 - actor: Add a custom scriptable "margin" property
    #676068 - Setting size on ClutterFlowLayout container crashes
    #676963 - text: Enable implicit color animations
    #675396 - Possible bug in _clutter_paint_volume_axis_align
    #674365 - Race during parallel build in tests/interactive/
    #676827 - layout-manager: Add a new animation API
    #677085 - examples: Allow optional animations in flow-layout
    #677086 - box-layout: Remove unused BoxChild members
    #677098 - Ensure we stop transitions on remove_child()
    #676854 - timeline: Add a new "finished" signal
    #677039 - Wrong allocation for WIDTH_FOR_HEIGHT actors
    #675998 - Example 4.2 mixes up height and width
    #677384 - doc: Add ClutterLayoutManagerPrivate to doc sections
    #677284 - table-layout: Honor actors expand and alignment settings
    #677283 - box-layout: Honor actor expand and alignment
    #677372 - Add ClutterGridLayout
    #677390 - events: Deliver touch events to actors

Many thanks to:

  Bastian Winkler, Chun-wei Fan, Bastien Nocera, Daniel Mustieles, Fran
  Diéguez, Tomeu Vizoso, Tristan Van Berkom, Alexander Larsson, Alexandre
  Franke, Bruno Brouard, Debarshi Ray, Dominique Bureau, Emanuele Aina, Matej
  Urbančič, Mike Ruprecht, Piotr Drąg

Clutter 1.11.2                                                       2012-04-30
===============================================================================

  • List of changes since Clutter 1.10

    - Add ClutterScrollActor
    An actor that can display a portion of its children, as well as
    transitioning between visible regions.

    - Make clutter_actor_allocate() respect the easing state of the actor
    This allows animating allocations in layout managers.

    - Add automatic expansion flags for ClutterActor
    Actors can be marked to by allocated extra space by their parent, or
    by the layout manager used by their parent; the expansion flags are also
    recursive, so they can be set on a leaf node of the actor tree, and
    propagate further up automatically.

    - Add ClutterTransitionGroup and ClutterKeyframeTransition
    Two ClutterTransition implementation that allow creating complex
    transitions.

    - Provide more C convenience API to ClutterTransition
    Instead of dealing with ClutterInterval instances, it's possible to
    define the starting and final values of a transition.

    - Provide base geometric types: point, size, rectangle
    Along with commodity API.

    - New round of deprecations
    ClutterMedia, ClutterCairoTexture, clutter_actor_animate(),
    ClutterAnimation, ClutterAnimator, ClutterState, ClutterLayoutManager's
    animation API.

    - Return a valid default PaintVolume in more cases
    For actors not overriding paint() or get_paint_volume() we can already
    infer enough information on the area thatis going to be painted, and return
    a valid paint volume. We specifically ignore any painting going on inside
    a ClutterActor::paint signal handler, as that is considered legacy and on
    its way to deprecation. People overriding the paint sequence of an actor
    from within a paint signal handler, and painting outside the allocation,
    are evil anyway.

    - Depend on Pango 1.30

    - Report distance as an axis on X11 with XInput 2 support enabled
    Proximity information with XInput 2+ is reported as axis data on devices
    with valuator classes.

    - Documentation fixes

  • List of bugs fixed since Clutter 1.10

    #674510 - Changing a hidden child's position with new API shows the
              actor
    #672994 - Orca sometimes presents previously-entered text in GNOME
              Shell Alt+F2 dialog
    #652521 - get_length fails in Clutter.Path when length is greater
              than 46340
    #673644 - Scroll not working in document overview

Many thanks to:

  Jasper St. Pierre, Neil Roberts, Robert Bragg, Cosimo Cecchi, Rob Bradford,
  Jonh Wendell, Piotr Drąg, Rico Tzschichholz, Alejandro Piñeiro,
  Carles Ferrando, Christian Kirbach, Daniel Korostil, Daniel Mustieles,
  Daniel Nylander, Fran Diéguez, Ihar Hrachyshka, Jordi Serratosa,
  Kenneth Nielsen, Owen W. Taylor, Peter Hutterer, Rajesh Ranjan,
  Rudolfs Mazurs, Stefano Facchini, Tristan Van Berkom, Viktor Nyberg,
  Yuri Myasoedov, kkrothap@redhat.com.

Clutter 1.9.16                                                       2012-03-19
===============================================================================

  • Clutter 1.10.0, release-candidate 1

  • List of changes since Clutter 1.9.14

    - Support implicit animatable properties
    Various properties of ClutterActor can now be implicitly animated when
    using the public setters, instead of going through the animation API;
    this is an opt-in mechanism for the 1.x API series.

    - Introduce paint nodes
    ClutterPaintNode is an element of the render tree; it is used to store
    the pipeline state and the geometry to be drawn. Actors have the ability
    to be painted using the paint nodes by overriding the paint_node() virtual
    function instead of the paint() virtual function. For the 1.x API series
    the render tree will be consumed per-actor, but the plan is to build a
    full tree as the authoritative source for the 2.x API series.

    - Support Content delegates
    ClutterContent is an interface that allows creating classes that will
    painted in place of an actor's paint() virtual function. Clutter provides
    two content types: Canvas, a Cairo-based immediate canvas for drawing the
    contents of an actor; and Image, a content that will paint image data.

    - ClutterText improvements
    The caret of editable text actors is now centered, and the background
    color will be respected when painting the actor.

    - Support for the XInput 2.2 extension
    Clutter will now relay touch events coming from the X server, as well
    as precise scrolling delta, for devices with those two capabilities.
    The support is still experimental, and limited to the X11 platform for
    the time being.

    - Translation updates
    Slovenian, Assamese, Bulgarian, Spanish, Galician, Belarusian, Traditional
    Chinese (Hong Kong and Taiwan), British English, Hebrew, Polish, Catalan,
    Khmer, Russian, Finnish, Odia, Brazilian Portuguese, Danish, Lithuanian,
    Portuguese, Czech, Swedish, French.

  • List of bugs fixes since Clutter 1.9.14

    [bugzilla.gnome.org]
    #655491 - Text cursor/caret theming
    #668801 - [NSApp finishLaunching]; missing in OSX backend
    #656156 - Add lightness, brightness, and contrast effects
    #671736 - Provide translations for "default:LTR" for RTL locales
    #671779 - gdk: add new device types (GDK_SOURCE_TOUCHSCREEN,
              GDK_SOURCE_TOUCHPAD)
    #672316 - Flickering/redraw issues in multi stage

Many thanks to:

  Piotr Drąg, Chun-wei Fan, Daniel Mustieles, Fran Diéguez, Matej Urbančič,
  Nilamdyuti Goswami, Alexander Shopov, Bruce Cowan, Florian Müllner,
  Gil Forcada, Ihar Hrachyshka, Stefano Facchini, Мирослав Николић,
  Adam Matoušek, Antonio Fernandes C. Neto, Aurimas Černius, Bruno Brouard,
  Carles Ferrando, Chao-Hsiung Liao, Daniel Nylander,  Duarte Loreto,
  Jasper St. Pierre, Joseph Scheuhammer, Kenneth Nielsen, Khoem Sokhem,
  Lionel Landwerlin, ManojKumar Giri, Marek Černocký, Timo Jyrinki,
  Tristan Van Berkom, Yuri Myasoedov

Clutter 1.9.14                                                       2012-03-05
===============================================================================

  • List of changes since Clutter 1.9.12

    - Support custom versioning boundaries for the API
    Now that GLib provides macros for changing the minimum required and
    maximum allowed version of a library, Clutter can respect the
    boundaries expressed using CLUTTER_VERSION_MIN_REQUIRED and
    CLUTTER_VERSION_MAX_ALLOWED.

    - Add version information to deprecations

    - Move all deprecated symbols to separate header files

    - Documentation and annotation fixes.

    - Accessibility fixes in Cally
    Do not use ClutterActor:name as the accessible name, and do not
    provide the extents of an accessible object if the actor to which
    it refers is not on screen.

    - Updates to the Wayland compositor and client support
    Clutter now allows being used for creating hybrid Wayland/X11
    compositors, working with KMS and evdev directly.

    - Translation updates: Bulgarian, Ukranian, Galician, Uyghur, Belarusian,
    Brazilian Portuguese, Telugu, Slovenian, Assamese, Serbian.

  • List of bug fixes since Clutter 1.9.12

    [bugzilla.gnome.org]
    #670680 - "make check" assumes gdk backend will be built

Many thanks to:

  Robert Bragg, Neil Roberts, Alejandro Piñeiro, Chun-wei Fan,
  Alexander Shopov, Daniel Korostil, Daniel Mustieles, Fran Diéguez,
  Gheyret Kenji, Giovanni Campagna, Ihar Hrachyshka, Jonh Wendell,
  Krishnababu Krothapalli, Matej Urbančič, Nilamdyuti Goswami,
  Мирослав Николић

Clutter 1.9.12                                                       2012-02-23
===============================================================================

  • List of changes since Clutter 1.9.10

    - Add ClutterTimeline:repeat-count and deprecate :loop
    The :repeat-count property supercedes the :loop property, and it
    provides a way to specify the number of repeats that a timeline
    should perform - with the option of specifying an "infinity" value.

    - Add a progress mode for ClutterTimeline
    This begins the "soft deprecation" of ClutterAlpha. Instead of
    requiring a full object to compute an easing function out of a
    linear progress coming from ClutterTimeline, we should have this
    functionality on ClutterTimeline itself. Since ClutterAlpha is
    still exposed in API that we cannot deprecate (such as virtual
    functions) we cannot deprecate it fully, and we'll have to wait
    until the 2.0 API bump to get rid of it.

    - Fix ClutterBoxLayout allocation
    Since the update of the box layout algorithm there have been a
    bunch of regressions; now the layout works as intended.

    - Improve the performance of the shader-based effect in Clutter
    The effects shipped with Clutter now use the CoglSnippet API
    internally, which allows efficient generation of the shader code;
    they also ensure that the shader is generated once per class, and
    shared across instances. These changes should improve performance
    when using effects provided by Clutter.

    - Update the internal usage of Cogl API
    Clutter should strive to use the Cogl 2.0 API internally and not
    mix the 1.0 and 2.0 API.

    - Allow accessing Wayland input devices
    This is a change that allows Clutter-based toolkits to interact
    with Wayland in a meaningful way for operations like resize and
    move.

    - Add a convenience CLUTTER_BIND_ALL enumeration
    This allows binding both position and size of an actor when using
    a ClutterBindConstraint.

    - Cally updates
    Use the newly added API to reimplement focus tracking.

    - Visual Studio project updates

    - Add clutter_text_coords_to_position()
    This method roundtrips the position_to_coords() one, and allows
    retrieving the index of the character at the given actor-relative
    coordinates.

    - Documentation updates.

    - Introspection annotation fixes.

  • List of bugs fixed since Clutter 1.9.10

    [bugzilla.gnome.org]
    #669730 - actor: Fix and improve add_child_at_index()
    #669291 - box layout bug when callin the clutter_actor_hide() function
    #667540 - Desynchronized size between ClutterStageCogl and ClutterStageX11
    #670433 - clutter-drop-action: annotation fixes for some signals
    #670402 - CRITICAL warning when ClutterDragAction has threshold > 0

    [bugzilla.clutter-project.org]
    #2515 - Setting a non-default stage fullscreen before showing it doesn't work


Clutter 1.9.10                                                       2012-02-06
===============================================================================

  • List of changes since Clutter 1.9.8

    - Provide symbolic names for pointer buttons
    The primary, middle, and secondary pointer buttons now have simple and
    easy to remember constants that can be used in place of the "magic"
    numbers.

    - Add ClutterActorIter
    A simple API, using a stack allocated opaque structure, for safely and
    efficiently traverse the children of a ClutterActor.

    - Fix regression introduced by the default FixedLayout layout manager
    Existing ClutterActor subclasses using their own layout management should
    now work exactly like in Clutter 1.8.

    - Documentation fixes
    Including introspection annotations fixes.

    - Updates to the Wayland backend
    The Wayland client backend is now up to date with the 0.85 release of
    the Wayland protocol.

  • Bugs fixed since Clutter 1.9.8

    [bugzilla.gnome.org]
    #668692 - Add symbolic names for left, right and middle buttons
    #668669 - Add iterator API for ClutterActor
    #667840 - Add annotations from Vala bindings
    #669360 - clutter-backend-eglnative.h missing in disted tarball
    #668951 - Fix warnings when weak_unreffing a finalized object

Many thanks to:

  Rob Bradford, Tristan Van Berkom, Chao-Hsiung Liao, Evan Nemerson,
  Kerrick Staley, Matej Urbančič

Clutter 1.9.8                                                        2012-01-24
===============================================================================

  • List of changes since Clutter 1.9.6

    - Fix regressions in users of deprecated API
    Also, allow to mix the new Actor API with the old Container API without
    breaking.

    - Add GResource support in ClutterScript
    GResource is a new infrastructure in GIO that allows to compile resources
    like UI builder files and image data into a shared library or an
    executable. A newly added method to ClutterScript makes it possible to
    load a UI definition from a resource, like it's done for files and
    data.

    - Update the Wayland client backend
    The SHM transport API has changed upstream, and the Clutter backend has
    been updated to reflect it.

Many thanks to:

  Rob Bradford, Fran Diéguez

Clutter 1.9.6                                                        2012-01-19
===============================================================================

  • List of changes since Clutter 1.9.4

    - Deprecate clutter_actor_show_all() and clutter_actor_hide_all()
    The latter never did make a lot of sense: hiding the parent will
    effectively hide the children as well; the former was there only for
    convenience, but Actors are visible by default.

    - Gracefully handle existing code
    The changes in ClutterActor introduced regressions in existing code
    because of the new functionaly that was introduced to replace deprecated
    classes like Box and Group. These regressions have hopefully been fixed;
    Clutter 1.9.6 has been tested with a project as complex as the GNOME
    Shell.

    - Fix build with binutils-gold
    The private dependencies were not used when building Clutter, and this
    made the Gold linker angry.

    - Allow tracking of an actor's first and last child
    ClutterActor has two new properties, :first-child and :last-child; these
    are read-only properties that can be used by toolkits based on Clutter
    to track the first and last child whenever they change.

    - Bump the Cogl dependency
    The 1.9.4 release depended on Cogl ≥ 1.9.4, but the minimum required
    version was not bumped along with the changes.

  • List of bugs fixed since Clutter 1.9.4

    [bugzilla.gnome.org]
    #668137 - FTBFS: pangoft2 check seems to be broken

Clutter 1.9.4                                                        2012-01-17
===============================================================================

  • List of changes since Clutter 1.9.2

    - New scene graph API in ClutterActor
    ClutterActor now provides the API for adding, removing, and iterating
    over the list of children; this deprecates most of the ClutterContainer
    API. ClutterActor implements ClutterContainer as well, which means that
    all actors can be containers.

    - Layout management updates
    ClutterActor now have an horizontal and vertical alignment properties
    that will be used when added to a parent; a margin has also been added
    to the ClutterActor class. Both margin and alignment will be automatically
    managed during the allocation, so they will work out of the box. It is
    also possible to set a ClutterLayoutManager delegate object on any
    ClutterActor instance: the LayoutManager will take care of the layout
    policy for the children of an actor.

    - Add ClutterTextBuffer
    The ClutterTextBuffer class provides a storage for the contents of
    a ClutterText actor; the same instance can be shared across different
    actors as well. The main use for ClutterTextBuffer is implementing
    secure memory storage for the contents of a ClutterText in password
    mode.

    - Deprecations
    ClutterGroup, ClutterBox, and ClutterRectangle have been deprecated; their
    functionality is now available directly in ClutterActor. The old child
    actor management API in ClutterActor and ClutterContainer has been
    deprecated as well. Other deprecations include the ClutterStage
    fog-related properties and API; the ClutterContainer.sort_depth_order(),
    raise(), and lower() virtual functions; the internal child push and
    pop methods on ClutterActor.

    - ClutterTimeline can parse markers from ClutterScript
    Markers can now be defined inside ClutterScript, and a ClutterTimeline
    will be able to automatically add them from a UI definition.

    - Add a diagnostic mode
    Similar to the GLib diagnostic mode, Clutter now supports an environment
    variable that will print out diagnostic messages for deprecations and
    warnings that can only be detected at run-time.

    - Wayland backend updates
    The wayland backend now tracks the latest API changes in the client API,
    and Clutter now provides a Wayland surface actor that allows to write
    Wayland compositors, similarly to the X11TexturePixmap actor for the
    X11 backend.

  • List of bugs fixed since Clutter 1.9.2

    [bugzilla.gnome.org]
    #665040 - The offscreen effect always recreates the texture if
              create_texture() is overridden to change the size
    #665052 - The internal effects should queue a repaint on the effect not
              on the actor when a property changes
    #664996 - clutter_state_set_key (allow-none)
    #664336 - path: Fix introspection annotations
    #664252 - in case GLSL shader fails to compile clutter-shader-effect.c
              should print out position in source code
    #664582 - lookingGlass: Fix global key press handler
    #660997 - Make _clutter_actor_queue_redraw_with_clip or an equivalent
              public

Many thanks to:

  Chun-wei Fan, Robert Bragg, Rob Bradford, Neil Roberts, Bastian Winkler,
  Fran Diéguez, Jasper St. Pierre, Matej Urbančič, Piotr Drąg,
  Alexander Shopov, Bastien Nocera, Daniel Mustieles, Jeremy Moles,
  Jovan Naumovski, Kjartan Maraas, Lucian Adrian Grijincu, Manuel Osdoba,
  Ryan Lortie

Clutter 1.9.2                                                        2011-11-22
===============================================================================

  • List of changes since Clutter 1.8

    - Multi-backend build, and run-time backend selection
    Clutter can be built with support for multiple backends in the same
    shared library; the backend singleton is determined at run-time,
    either with the default backend for the platform, or using the value
    of the CLUTTER_BACKEND environment variable.

    - GDK windowing system backend
    A new backend has been added, which uses the GDK API for creating the
    drawing surface, as well as receiving the windowing system and input
    events.

    - Show a hint when ClutterText is in password mode
    If the password-hint-time ClutterSettings property is set to a non
    zero value, the last character entered inside a ClutterText actor when
    in password mode will be shown in plain for the duration of the timeout,
    before being replaced by the glyph chosen as the password character.

    - Improve Windows build support
    Clutter now provides project files to build the library using Visual
    Studio 9 and Visual Studio 10. Also, the scripts to build Clutter using
    MinGW have been improved.

    - Remove the requirement for using clutter_threads_init()
    Threads are initialized by default (depending on the platform), so there
    is no need to call clutter_threads_init().

    - Deprecate the default ClutterStage
    The semantics of the default Stage were not obvious, and had the tendency
    to confuse the user.

    - Move the deprecated headers into their own directory
    This should help developers identify the deprecated API.

    - Change deprecation policy
    Deprecated functions are now marked using compiler annotations, instead
    of being forcibly disabled through pre-processor directives from the
    headers. Deprecations will cause compiler warnings, and thus are enabled
    by default. If you're building your project with compiler flags that
    consider every warning a fatal error, you can use the symbol
    CLUTTER_DISABLE_DEPRECATION_WARNINGS to disable the deprecation warnings.

    - Translation updates
    Portuguese, Assamese, Punjabi, Tamil, Oriya, Telugu, French, German,
    Danish, Traditional Chinese (Hong Kong and Taiwan), Catalan, Esperanto,
    Lithuanian, Galician, Norwegian bokmål, Slovenian, Hebrew, Bulgarian.

  • List of bugs fixed since Clutter 1.8

    652588 - add support for password hint in ClutterText
    659625 - mingw32: Update the build script to compile 1.8.0
    659601 - offscreen effects on children of containers also with an
             offscreen effect get a wrong viewport
    659928 - Two strings are not marked as translatable
    659893 - clutter-main: Reword translator comment for default:LTR
    656663 - Remove internal usage of ClutterGeometry in StageWindow
    660354 - Add paint-deform-tiles option to CLUTTER_DEBUG
    660471 - ClutterActor: Add clutter_actor_has_effects
    660512 - ClutterShaderEffect recompiles the shader for every instance
    660623 - clutter-actor-meta: Fix _clutter_meta_group_has_metas_no_internal
    660985 - memory leak in clutter_box_layout.c
    661015 - Add clutter_unicode_to_keyval function
    660786 - Deprecate clutter_[sg]et_font_flags()
    661887 - auto-resize of ClutterCairoTexture does not work correctly
    657434 - Add a GDK backend to Clutter
    663332 - orca reads my password in gnome-shell policykit dialogs
    663594 - Minor whitespace parsing bug in clutter_color_from_string
    663733 - clutter-stage-x11: Make sure to set geometry x and y
    651718 - Make tests work on platforms supporting only a single stage
    663999 - The removal of per-backend CLUTTER_VBLANK envvar had unwanted
             cruft in the Win32 backend
    663720 - DeformEffect: Avoid redrawing actors on vertices invalidation
    663636 - Use newer Cogl API in ClutterDeformEffect

Special thanks to

  Chun-wei Fan, for building, testing, and keeping up to date the Visual
  Studio project files.

Many thanks to:

  Neil Roberts, Rico Tzschichholz, Robert Bragg, Adel Gadllah,
  Lionel Landwerlin, Alexandre Franke, Colin Walters, Daniel Mustieles,
  Giovanni Campagna, Piotr Drąg, krishnababu k, A S Alam, Alexander Shopov,
  Algimantas Margevičius, Ask H. Larsen, Bruno Brouard, Carles Ferrando,
  Chao-Hsiung Liao, Craig R. Hughes, Damien Lespiau, Duarte Loreto,
  Florian Müllner, Fran Dieguez, Fran Diéguez, Håkon Løvdal, I Felix,
  Jasper St. Pierre, Jorge González, Joseph Scheuhammer, Kjartan Maraas,
  Kristjan SCHMIDT, Manoj Kumar Giri, Marc-André Lureau, Mario Blättermann,
  Matej Urbančič, Matthias Clasen, Nilamdyuti Goswami, Sunjin Yang,
  Tomeu Vizoso, Yaron Shahrabani, Zan Dobersek, Мирослав Николић.

Clutter 1.7.90                                                       2011-09-12
===============================================================================

  • List of changes since Clutter 1.7.14

    - Make sure that setting :use-markup does not depend on the order
    Setting the :use-markup property should yield the same results regardless
    of whether the :text property is also set before or after. This applies to
    ClutterText defined using ClutterScript as well.

    - Protect against multiple unrealize call on ClutterStage
    This should fix a segmentation fault in clutter-gtk when unrealize() is
    called multiple times on an already unrealized stage.

    - Fortify ATK event listener
    Make sure that we subscribe only to the events we want to, and avoid
    warnings caused by AT-SPI, as well as a leak.

    - Documentation fixes

    - Translation updates
    Indonesian, British English, Brazilian Portuguese, Oriya, Polish,
    Latvian, Hindi, Danish, Chinese (Simplified), Lithuanian, Turkish,
    Russian, Spanish, Asturian.

  • List of bugs fixed since Clutter 1.7.14

    [bugzilla.gnome.org]

    #651940 - "use-markup" is ignored when set after "text"
    #658721 - cally: Fix up event listener registration minimally

    [bugzilla.clutter-project.org]

    #2629 - ClutterText thinks priv->text can be NULL, but it can't

Many thanks to:

  Muhammet Kara, Andika Triwidada, Manoj Kumar Giri, Piotr Drąg,
  Aurimas Černius, Bruce Cowan, Edvaldo de Souza Cruz, Jorge González,
  Kenneth Nielsen, Matthias Clasen, Neil Roberts, Og B. Maciel,
  Rajesh Ranjan, Ray Wang, Rudolfs Mazurs, Xandru Armesto, Yuri Myasoedov

Clutter 1.7.14                                                       2011-09-05
===============================================================================

  • List of changes since Clutter 1.7.12

    - Use newer version of ATK
    Cally now depends on the latest version of ATK, to reduce the amount of
    ad hoc code needed and to use newer features that simplify the
    implementation of accessible objects in Clutter.

    - Allow using Layout Managers with generic containers
    Layout managers should not assume that they are allocating the whole
    area available from the Actor using them; this allows actors that
    support concepts like padding or margin to use a LayoutManager internally
    for its children.

    - Cookbook updates
    Add a recipe on how to bind a ClutterState to the signals of objects
    defined in ClutterScript. We also install the cookbook examples inside
    the $datadir/clutter-1.0/cookbook/examples directory.

    - Improve examples in the API reference
    Some of the interactive test suite units are actually good examples of
    how to use the Clutter API; we can use the XInclude tags to include the
    source code inside the API reference.

    - Ensure thread safety of the repaint functions add/removal
    Fix a long standing issue where adding or removing repaint functions
    was not acquiring a lock; now it's safe to manipulate the repaint
    functions list from different threads.

    - Make the ClutterText:line-wrap property work again
    In 1.2 the :line-wrap property was broken, and ClutterText would paint
    a PangoLayout wrapping until it fit the height of the allocation
    regardless of whether the :line-wrap property was set to FALSE or
    TRUE. Now we clip the PangoLayout before rendering it, if the :line-wrap
    property is set to FALSE and there is no ellipsization policy set.

    - Disable redirection to offscreen buffer by default
    Whenever a ClutterActor with children was not fully opaque, the actor
    was redirected to an FBO, to perform correct opacity computations.
    Sadly, this can lead to 3x slowdowns, given the amount of framebuffer
    objects created and the state changes that have to be performed. We
    decided to turn off this feature by default, to avoid the performance
    hit. It is still possible to enable this feature on a per-actor basis,
    though, and will work to reduce the hit in future versions of Cogl,
    Clutter and the drivers.

  • List of bugs fixed since Clutter 1.7.12

    [bugzilla.gnome.org]

    #657681 - Crash when destroying an actor while dragging it

    [bugzilla.clutter-project.org]

    #2339 - ClutterText in 1.4 line-wraps even if line-wrap is disabled

Many thanks to:

  Alejandro Piñeiro, Shankar Prasad, Chao-Hsiung Liao, Dan Winship,
  Daniel Mustieles, Daniel Nylander, Fran Dieguez, Marek Černocký,
  Robert Bragg

Clutter 1.7.12                                                       2011-08-29
===============================================================================

  • List of changes since Clutter 1.7.10

    - Reload the font caches on X11 when the user installs a new font
    Whenever the user installs a new font inside one of the directories that
    ware being watched by a session daemon, or changes the fontconfig
    configuration, the toolkits using FontConfig (either directly or indirectly
    e.g. through Pango, like Clutter) should listen to the Fontconfig/Timestamp
    XSETTINGS key and release all the font configuration caches. This allows
    selecting the newly installed fonts without requiring the user to restart
    the application.

    - Allow using "font-description" as a ClutterScript alias for "font-name"
    ClutterText:font-description allows passing a PangoFontDescription
    directly to a ClutterText; when defining a ClutterText instance inside a
    ClutterScript file, :font-description should be an alias for :font-name,
    which takes a string and converts it to a PangoFontDescription.

    - Make sure that LayoutManager subclasses take the allocation origin
      into account when allocating the children
    A LayoutManager should be resilient against allocations with an origin
    not positioned at (0, 0); this allows actors using a layout manager
    instance to munge the box and implement things like margin and padding
    without the layout manager having knowledge of those concepts.

    - Build fixes
    Always link against libm when building Clutter (and its tests); don't
    rely on libraries lower on the stack to do so.

    - Documentation fixes

  • List of bugs fixed since Clutter 1.7.10

  [bugzilla.gnome.org]

  #657529 - Build failure

Many thanks to:

  Robert Bragg, Daniel Mustieles, Fran Dieguez, Kjartan Maraas

Clutter 1.7.10                                                       2011-08-15
===============================================================================

  • List of changes since Clutter 1.7.8

    - Do not update the last paint volume when picking
    Last minute fix for an issue that was most prominently manifesting itself
    when using GNOME Shell with Clutter 1.7; this should resolve the issue
    that dragging icons from the dash left around some stale pixels.

    - Fix building the tests
    The performance and micro-benchmark tests did not pick up changes in
    local dependencies, e.g. under a JHBuild root.

  • List of bugs fixed since Clutter 1.7.8

    [bugzilla.gnome.org]

    #656588 - Outdated FSF Address in code files

Many thanks to:

  Alejandro Piñeiro, Robert Bragg

Clutter 1.7.8                                                        2011-08-15
===============================================================================

  • List of changes since Clutter 1.7.6

    - Various fixes in Cally
    Make sure to use Clutter's API and remove old workarounds that were put
    into place when Cally was a separate project and targeting pre-1.0 API
    versions of Clutter.

    - Add ClutterCairoTexture:auto-resize
    This property makes it easier to create 2D canvas surfaces by tracking
    the actor's allocation in a backward compatible way.

    - Add ClutterAnimatable.interpolate_value()
    This new virtual function deprecates the animate_property() virtual of the
    Animatable interface, which was sub-optimal in different ways.

    - Allow using Animatable implementations with ClutterState
    Thanks to the new interpolate_value() virtual it is now possible to use
    the Animatable interface with ClutterState; this allows animating
    action, constraint and effect properties using the same "@" syntax also
    used by ClutterAnimation and clutter_actor_animate().

    - Improve ClutterModel's implementation
    Avoid a bunch of needless checks, and make sure that the ::row-changed
    signal is emitted in all cases when a row has been changed through the
    ClutterModelIter API. The conformance test unit for ClutterModel has
    also been improved to avoid future regressions.

    - Improve ClutterStage behaviour on OS X
    Make sure that the fullscreen, multi-screen and key focusing are
    well-behaved on OS X, by implementing the correct delegate methods.

  • List of bugs fixed since Clutter 1.7.6

  [bugzilla.gnome.org]

  #655387 - Missing GObject introspection annotations
  #655306 - Added windowDidChangeScreen delegate to fix pick errors when
            window moved to different screen
  #655311 - Prevent hiding of unrelated application windows when stage returns
            from fullscreen
  #655307 - Fix resource leak on subsequent calls to clutter_stage_osx_realize
  #648633 - gnome-shell notification pop-ups do not emit
            object:state-changed:showing

Many thanks to:

  Kirk A. Baker, Neil Roberts, Alejandro Piñeiro, Alejo Pacin,
  Daniel Mustieles, Evan Nemerson, Marek Černocký, Philippe Normand,
  Robert Bragg


Clutter 1.7.6                                                        2011-07-26
===============================================================================

  • List of changes since Clutter 1.7.4

    - Accessibility fixes in Cally
    Fix the implementation of the AtkText interface for ClutterText.

    - Depend on the new Cogl windowing system API.

    - Add functions for retrieving the clip boundaries on the Stage
    The clutter_stage_get_redraw_clip_bounds() function is useful for
    window managers (like Mutter) that need to retrieve the clipped
    region used on the Stage.

    - Auto-detect the default flavour when building
    The default flavour used when building should be set depending
    on the platform.

    - Mark the OSX backend as non-experimental
    The OSX backend is being developed, and maintained, so it should
    not be considered experimental.

    - Make sure that Gestures are cancelled when missing release events

    - Correct the rounding for paint volumes
    Try to provide stable results against potential floating point rounding
    margins when projecting 3D paint volumes into screen bounding boxes;
    this should avoid re-creating FBOs and always correctly handle clipped
    redraws.

    - Do not clobber XI2 events data
    This allows to play along with other toolkits using XI2.

    - Fix ClutterSnapConstraint's right edge snapping

    - Deprecations
    ClutterScore, clutter_texture_new_from_actor(),
    clutter_cairo_texture_create*()

  • List of bugs fixed since Clutter 1.7.4

    [bugzilla.gnome.org]

    #653959 - clutter-actor: Don't apply shaders during picking
    #654361 - uprof: Rename timers to remove the EGL specific bits
    #654363 - uprof: Add the units in the name of the "Per Frame"
              timer attribute
    #654103 - Fixed typo
    #654656 - Improve XGenericEventCookie allocation wrt other toolkits
    #654024 - snap-constraint: Fix allocation for CLUTTER_SNAP_EDGE_RIGHT
    #654066 - ClutterTimeline new-frame signal not working correctly on
              some platforms
    #654718 - clutter-1.6.16 compile issues
    #654726 - text: Fix the default value of "editable"
    #654727 - alpha: Don't use the GClosure to compute the alpha when
              possible
    #655342 - memory leak in clutter_bin_layout_get_preferred_width/height

    [bugzilla.clutter-project.org]

    #1733 - AtkText implementation on CallyText is not complete
    #2421 - Way to get current repaint bounds

Many thanks to:

  Robert Bragg, Philippe Normand, Neil Roberts, Damien Lespiau, Tomeu Vizoso,
  Gil Forcada, Alejandro Piñeiro, Bastian Winkler, Carlos Garnacho,
  Christian Kirbach, Daniel Mustieles, Dinh Bowman, Kjartan Maraas,
  Marek Černocký, Mario Blättermann, Matej Urbančič, Piotr Drąg

Clutter 1.7.4                                                        2011-07-04
===============================================================================

  • List of changes since Clutter 1.7.2

    - Unify the GLX and EGL backends to be a single code base
    The GLX and EGL backends shared most of their code, and with the split
    out Cogl, we can unify the code base into a single backend. The API as
    well as the ABI are preserved.

    - Restore a wider range of Z values for actors
    The computation for the near and far planes given the perspective
    transformation used to set up the viewport was broken in 1.7.2, and
    the distance from the focal point was greatly reduced. This has now
    been fixed.

    - Bump up the dependency of Cogl
    New windowing system API in Cogl required bumping the minimum version
    to the latest development snapshot, 1.7.2.

    - Add ClutterDropAction
    The ClutterDropAction is an action for allowing ClutterActors to react
    when an actor being dragged through ClutterDragAction crosses, or is
    dropped over, them.

    - Add a performance test suite
    This suite is an addition to our conformance and interactive test
    suites; the infrastructure can be used by buildbots and report tools
    to track performance regressions across various commits.

    - Documentation and annotation fixes

    - Build fixes

  • List of bug fixes since Clutter 1.7.2

    [bugzilla.gnome.org]

    #650329 - ClutterModifierType: Port fix from GDK to clutter's GDK copy
    #652566 - Clutter-CRITICAL **: _clutter_stage_get_window: assertion
              `CLUTTER_IS_STAGE (stage)' failed
    #651784 - transition=spin / transition=spin-text is broken in pinpoint
              with Clutter master
    #652842 - Add a Drop action
    #653066 - ClutterDragAction does not support multiple pointers
    #653307 - Change the signature of ClutterTexture::load-finished to give
              a GError, instead of a gpointer
    #653607 - Arrays not annotated as such for introspection bindings
    #651079 - ClutterText "blinks" when deleting text after going out of
              bounds
    #650675 - clutter-media: mention the asynchronous behavior of
              set_playing()

    [buzgilla.clutter-project.org]

    #2625 - The furthest visible z value is really low

Many thanks to:

  Robert Bragg, Neil Roberts, Peter Ward, Colin Walters, Daniel Mustieles,
  Jasper St. Pierre, Samuel Degrande, Øyvind Kolås

Clutter 1.7.2                                                        2011-06-13
===============================================================================

  • List of changes since Clutter 1.6.0

    - Cogl moved out of tree
    The Clutter OpenGL abstraction library has been moved to a separate
    repository and can be used as a stand-alone shared library. Clutter
    has been modified to depend on Cogl's experimental API.

    - Correctly composite non fully opaque children
    Non fully opauqe actors with non fully opaque children will automatically
    redirect children paint operations to offscreen buffers, which allow
    correct composition taking into account the overall opacity of the scene's
    sub-graph. The same mechanism can be used to create a paint cache, and
    paint that cache when the actor or its children do not change, instead of
    painting the whole sub-graph again.

    - Allow connecting signals to ClutterState states in ClutterScript
    When defining a scene using ClutterScript it's possible to directly
    connect a state inside a ClutterState object (both defined in
    ClutterScript or in code) to an object's signal, without using an
    explicit signal handler in the code.

    - Long-press handling in ClutterClickAction
    ClutterClickAction will detect a long-press gesture and emit signals
    to query, activation and cancellation.

    - Added ClutterGestureAction and ClutterSwipeAction
    ClutterGestureAction is a generic "pointer gesture" action; it doesn't
    provide an implementation: it's up to the developer to add the gesture
    recognition code. ClutterSwipeAction is a GestureAction sub-class that
    implement the "swipe" gesture. The GestureAction API is already future
    proof for multi-device/multi-touch, even though the multi-touch isn't
    currently implemented.

    - Allow Effects to influence picking
    Effects that change the geometry of a ClutterActor should also be
    allowed to change the picking code to make sure that event handling
    keeps working. ClutterEffect has a new pick() virtual function for
    these cases.

  • List of bugs fixes since Clutter 1.6.0

    [bugzilla.clutter-project.org]
    #2257 - clutter fails to link on OS X (10.6)
    #2447 - atkevents example crashes is the accessibility is disabled
    #2482 - Cally should avoid to provide a default name and description
    #2484 - It would be nice to have the old cally Changelog
    #2553 - new ClutterText API to access the Pango layout offsets
    #2555 - Per-framebuffer journal causes corruptions
    #2562 - Crash upon running Clutter-based programs
    #2585 - add ClutterAction for slide gestures
    #2588 - Assertion failure in _cogl_pipeline_set_layer_texture_target
    #2595 - clutter-text: Add a selected-text-color
    #2597 - CallyStage doesn't have a proper parent
    #2599 - The paint volume for ClutterText is wrong
    #2602 - Expose events ignored when doing clipped redraws
    #2610 - Add recipe about implementing a ClutterEffect
    #2619 - Removes the addition of the .exe extension to unit-test scripts,
            on win32.
    #2620 - _cogl_offscreen_new_to_texture_full() leaks reference when failing
    #2621 - Clutter segfaults if you queue a redraw of an unmapped actor inside
            the notify::mapped callback
    #2631 - [PATCH] Enable evdev ClutterInputDevice objects on creation, as the
            other backends do
    #2632 - [PATCH] GL_IMG_TEXTURE_NPOT enables non-power-of-two features
    #2633 - Make the pick id pool a per-Stage resource
    #2640 - [patch] allow single-bit imprecision in some conformance tests
    #2644 - Quartz backend: "Bare" modifier keypresses not generating events
    #2652 - clutter_actor_queue_redraw() on destroyed stage
    #2655 - segfault when disposing a slave device without a master
    #2656 - Clutter can crash when destroying a stage from an event
    #2667 - git head won't build under Win32

    [bugzilla.gnome.org]
    #650665 - CallyActor shouldn't add by default "press", "release"
              and "click"
    #647875 - Use Cairo to dump the pick buffers
    #647876 - Make the pick if pool a per-Stage resource
    #650487 - Sync allocation in ClutterBoxLayout with the one in GtkBox
    #650597 - clutter-id-pool: fix warning on bad pick
    #650650 - clutter-offscreen-effect: use target size when setting up
              the viewport
    #651700 - Give a chance to effects for running when picking
    #652129 - Use "const" instead of G_CONST_RETURN

Many thanks to:

  Neil Roberts, Robert Bragg, nobled, Daniel Mustieles, Elliot Smith,
  Matej Urbančič, Alejandro Piñeiro, Chris Lord, Marek Černocký,
  Tomeu Vizoso, Jasper St. Pierre, James Athey, Piotr Drąg, Øyvind Kolås,
  Adam Jackson, Andrej Žnidaršič, Kjartan Maraas, Adel Gadllah,
  Alexandre Franke, Christian Kirbach, Craig R. Hughes, Dan Winship,
  Dioselin, Kristjan SCHMIDT, Mario Blättermann, Miguel Bouzada, Peter Ward,
  Philippe Normand, Samuel Degrande, Viatcheslav Gachkaylo

Clutter 1.6.6                                                        2011-02-21
===============================================================================

  • List of changes since Clutter 1.6.4

    » Add four mechanisms for migrating textures inside a Cogl atlas; it
      is possible to change the default by using the environment variable
      COGL_ATLAS_DEFAULT_BLIT_MODE.

    » Use the offscreen buffer size to compute the vertices of
      ClutterDeformEffect.

    » Make the FPS counter displayed using CLUTTER_SHOW_FPS per-stage.

    » Documentation fixes.

    » Annotation fixes for introspection.

  • List of bugs fixes since Clutter 1.6.4

    #2538 - crash in gnome-shell
    #2558 - backend-glx: Remove redundant glFlush()
    #2561 - Updates to COGL sources regarding non-standard code usage
    #2571 - DeformEffect should use the FBO size

Many thanks to:

  Neil Roberts

Clutter 1.6.4                                                        2011-02-14
===============================================================================

  • List of changes since Clutter 1.6.2

    » Fix handling of opacity in ClutterOffscreenEffect.

    » Fix partially off-stage actors in ClutterOffscreenEffect.

    » Add a recipe in the Cookbook for animating an actor on a path.

    » Refresh key mapping when notified by X11.

    » Clean up the ClutterStageWindow redraw implementations.

    » Update the Wayland backend to match upstream API changes:
      • allow using shared buffers if DRM fails;
      • improve checks for the required extensions.

    » Documentation fixes.

    » Introspection annotations fixes.

    » Fix setting the matrix for a pipeline layer.

    » Fix flushing the framebuffer when switching to it.

    » Make sure to call glFlush when blitting a stage region to the
      front buffer, to avoid the driver batching the command for an
      undefined amount of time.

    » Fix the windowing system defines for non-X11 platforms.

    » Fix the location of the shared objects in the Cally pkg-config
      file.

  • List of bugs fixed since Clutter 1.6.2

    #1024 - test-multistage.c assertion failure
    #1025 - test-paint-wrapper.c assertion failure
    #1028 - test-random-text.c hangs with spinning beach ball
    #1029 - test-cogl-primitives.c hangs with spinning beach ball
    #1358 - scroll events not handled
    #2373 - OSX Backend fix
    #2525 - [PATCH] x11: Handle key map changes
    #2541 - ClutterOffscreenEffect with multiply the actor's opacity
    #2546 - [PATCH, git branch] update wayland backend
    #2549 - Fix lib locations in *.pc.in
    #2550 - offscreen effects are always clipped to stage boundaries
    #2551 - Slight drawing lag with larger windows on Intel x3100 (i965)
    #2554 - Add recipe per animating an actor on a curved path
    #2555 - Per-framebuffer journal causes corruptions
    #2558 - backend-glx: Remove redundant glFlush()
    #2559 - x11: segfault on closing non-default stage window

Many thanks to:

  nobled, Chris Lord, Neil Roberts, Robert Bragg, Adel Gadllah, Elliot Smith

Clutter 1.6.2                                                        2011-02-07
===============================================================================

  • List of changes since Clutter 1.6.0

    » Fix building the Clutter Cookbook from the released tarballs.

    » Set the input device field in ClutterEvent even when they
      have been allocated by Clutter.

    » Fix the color comparison when setting the layer combine constant.

    » Fix memory corruption when removing the last reference on a
      Cogl vertex buffer object.

    » Fixes for the OSX backend.

  • List of bugs fixed since Clutter 1.6.0

    #2540 - coobook examples do not build from tarball
    #2544 - Using vertex buffers causes memory corruption when you unref
            the CoglHandle
    #2545 - Broken event handling in OS X backend
    #2549 - Fix lib locations in *.pc.in

Many thanks to:

  Neil Roberts, Viatcheslav Gachkaylo

Clutter 1.6.0                                                        2011-01-31
===============================================================================

  • List of changes since Clutter 1.5.14

    » Remove more private symbols from the X11 backend.

    » Add CLUTTER_BIND_POSITION and CLUTTER_BIND_SIZE values to the
      ClutterBindCoordinate enumeration; these are short-hand values
      for binding both X and Y, or width and height, instead of
      requiring two ClutterBindConstraint instances.

    » Clean up in the X11 backend to reduce indirection.

    » Small clean ups in the Win32 backend.

    » Make Shift+Backspace behave like Backspace in ClutterText.

    » Emit the ::new-frame signal even on the first frame of
      ClutterTimeline, to allow setting up the initial state of an
      animation.

    » Fix an invalid memory access in ClutterAnimator.

    » Flush the per-framebuffer journal when switching between
      framebuffers.

    » Generalize updating GLES2 uniforms.

    » Add debug code for tracing clipping in Cogl.

    » Improve the OSX event loop, re-using the same implementation
      as GDK. Also, provide simple, core-like device support.

  • Bugs fixed since Clutter 1.5.14

    #2490 - OS X backend event loop improved
    #2530 - animator: Animator uses key after freeing it
    #2534 - Incorrect description of function 'clutter_actor_pop_internal'
    #2535 - Add recipe about creating a composite actor

Many thanks to:

  Neil Roberts, Robert Bragg, Elliot Smith, Rob Bradford,
  Viatcheslav Gachkaylo

Clutter 1.5.14                                                       2011-01-24
===============================================================================

  • List of changes since Clutter 1.5.12

    » Allow getting the state modifiers from a ClutterClickAction.

    » Fix ClutterDragAction to never leave the event delivery in
      an unwanted state.

    » Optimize state changes for texture and data states.

    » Enable VBO support in Cogl for GLES2.

    » Fix compilation on GLES1.1.

    » Documentation fixes.

    » ClutterGLXTexturePixmap has been deprecated; its parent class
      ClutterX11TexturePixmap and the low level CoglTexturePixmapX11
      API provide access to the same features.

    » Be more resilient against timelines controlling the state of
      other timelines during the clock tick.

    » Provide defines for the windowing platforms, to allow portable
      applications to include the correct header and select the
      correct API depending on the target.

    » Introduce a fast path for cogl_read_pixels() that uses the journal
      to determine the position of a single pixel on the stage; this
      fast path gracefully degrades to the usual render-based approach,
      and should speed up picking considerably in the case of opaque
      quads batched together.

    » Support XInput axis data on valuator devices, and introduce XInput2
      support for event translation and device hotplugging. The support
      for XI and XI2 must still be explicitly enabled by the developer,
      but it is now compiled in by default. It can be disabled at compile
      time by passing --disable-xinput to the configure script.

    » Clean up the unintentionally leaked internal symbols in the X11
      and GLX backends.

    » Allow defining the contents of the rows of a ListModel using
      ClutterScript. This completes the ability to fully define a
      ClutterListModel inside a UI definition file.

  • Bugs fixed since Clutter 1.5.12

    #1422, key input handler for eglnative
    #1456, Hinting mishandling
    #1721, XInput2 support
    #2268, EGL backend dependent on X11 headers
    #2400, Don't enable GL_POINT_SPRITE on GLES
    #2497, should not throw away a program when just the texture
           object has changed
    #2512, shader: Don't notify properties when finalizing shaders
    #2513, script-parser: Also honor properties of type GType
    #2516, [PATCH] Fails to compile with --with-gles=1.1
    #2518, introspection: Add missing (out) annotations for get_color()
    #2520, Add API to get modifier type in ClutterClickAction
    #2522, ClutterDragAction might indefinitely disable motion events
    #2524, It's possible to receive a new-frame signal after stopping
           a timeline
    #2526, model: Fix some GObject-Introspection annotations
    #2527, model: Change the column argument type to gint for
           clutter_model_set_sort
    #2528, model: Add support to define rows in ClutterScript

Many thanks to:

  Robert Bragg, Neil Roberts, Bastian Winkler, Lucas Rocha, Adel Gadllah,
  Chris Lord, Damien Lespiau

Clutter 1.5.12                                                       2011-01-11
===============================================================================

  • List of changes since Clutter 1.5.10

    » Allow disabling the focus when showing a ClutterStage; this also
      makes Clutter more compliant to the X11 window manager
      specifications.

    » Avoid state corruption in relayout cycles.

    » Do not crash when destroying actors during CLUTTER_LEAVE events.

    » Remove signal handlers when disposing constraints.

    » Keep the pixel alignment for ClutterAlignConstraint.

    » Do not release compiled ClutterShader during their finalization to
      avoid a warning.

    » Revert an ABI break on the ClutterContainer pre-requisites.

    » Fix the name of the cogl_normal_in attribute.

    » Do not assume CoglBitmaps are allocated to height * rowstride.

    » Fix the core device list creation on X11.

    » Avoid enabling blending in the Cogl journal, if possible.

    » Documentation fixes.

    » Build fixes for mixed autotools version environment.

    » Improve the performance of getting the number of rows of a
      ClutterListModel.

    » Don't use obsolete API internally.

    » Build fix for compiling EGL backend with OpenGL under X11.

    » Parse GType object properties in ClutterScript.

Many thanks to:

  Neil Roberts, Johan Bilien, nobled, Adel Gadllah, Damien Lespiau,
  Kristian Høgsberg, Nguyễn Thái Ngọc Duy, Tomeu Vizoso, Bastian Winkler

Clutter 1.5.10                                                       2010-12-17
===============================================================================

  • List of changes since Clutter 1.5.8

    » Add an evdev input backend; this adds support for input devices
      on Linux when using the EGL-based backends.

    » Update the build scripts for compiling the Windows backend.

    » Updates for the Cookbook and the API references.

    » Fix ClutterModel::get_iter_at_row() for filtered ClutterListModels.

    » Scores of fixes to the pipeline state object for GLES2.

    » Add code that tries to perform manual clipping to avoid breaking
      up batches of primitives.

    » Keep a cache of ARBfp programs indexed by the pipeline state that
      led to their generation.

    » Accept G_TYPE_DOUBLE values in ClutterShaderEffect uniforms.

    » Update the Wayland client backend.

    » Update the build for Windows.

    » Rename the ClutterTimeline:reverse property introduced in
      Clutter 1.5.6 to ClutterTimeline:auto-reverse.

    » Clean up the interactive tests suite.

Many thanks to:

  Neil Roberts, Damien Lespiau, Robert Bragg, Elliot Smith,
  Jussi Kukkonen, nobled, Alexandre Quessy, Mike Owens,
  Tomeu Vizoso

Clutter 1.5.8                                                        2010-11-29
===============================================================================

  • List of changes since Clutter 1.5.6

    » Add a migration guide for code using Behaviours.

    » Allow parsing rgb(), rgba(), hls() and hlsa() color definitions.

    » Performance improvements for the ClutterX11TexturePixmap.

    » For caching purposes, do not discard the Material or the compiled
      shaders for Offscreen and Shader effects.

    » Fix image height in 3D Cogl textures.

    » Create a GLSL generation backend for materials, similar to the
      ARBfp one; this backend is the default for GLES2.

    » Use FBOs and cogl_read_pixels() to efficiently read back partial
      texture data.

    » Various fixes in paint volumes computation and caching.

    » Use the internal scene graph walk API to remove the map/unmap
      implementation requirement for composite actors and for
      containers with internal children.

    » Simplify the backend notification of layer changes.

    » Queue clipped redraws for Expose events on X11.

    » Plug leaks.

    » Include a porting guide from Behaviours.

    » Add a recipe on scaling animations in the Cookbook.

Many thanks to:

  Neil Roberts, Robert Bragg, Owen W. Taylor, Tomeu Vizoso, Chris Lord,
  Alexandre Quessy, Evan Nemerson, Elliot Smith

Clutter 1.5.6                                                        2010-11-19
===============================================================================

  • List of changes since Clutter 1.5.4

    » Deprecate ClutterBehaviour and its sub-classes: the same functionality
      is available using the animation framework.

    » Add ClutterSnapConstraint, a constraint implementation that snaps
      together the edges of two actors.

    » Add ClutterPathConstraint::node-reached.

    » Deprecate ClutterTimeoutPool and ClutterFrameSource: this API is
      not used internally any more, and since it's not integrated with
      the master clock it's of relative use.

    » Add a named, global color palette.

    » Add the ClutterTimeline:reverse property, for automatically
      reversing the direction of a timeline after the emission of
      the ::completed signal.

    » Performance improvements in the clip stack.

    » Do not use pointer grabs in ClutterClickAction.

    » Improve the internally used Cogl API for primitives, paths and
      buffers; this is the first step towards Cogl 2.0.

    » Allow using the COGL_DEBUG environment variable to disable the
      NPOTs support.

    » Plug a nasty infinite loop in the XSETTINGS implementation.

    » Internally rename CoglMaterial to CoglPipeline; this should make
      it clearer that the API refers to the state of the GPU pipeline.

    » Add support for clipped redraws on EGL using the NOK_swap_region
      extension.

    » Build fixes.

    » Use the monotonic clock API if compiling against GLib ≥ 2.27.3.

    » Update examples in the Cookbook.

    » Add a Cookbook recipe for looping animations.

    » Add more documentation on Constraints.

    » Documentation fixes.

Translation updates:

  Italian, Polish

Many thanks to:

  Robert Bragg, Neil Roberts, Elliot Smith, Owen W. Taylor,
  Damien Lespiau, Lucas Rocha, Maxim Ermilov, Piotr Drąg,
  Tomeu Vizoso, muflone

Clutter 1.5.4
===============================================================================

  • List of changes since Clutter 1.5.2

    » Add a backend for Wayland.

    » Depend on GLib ≥ 2.26, Cairo ≥ 1.10.

    » Do not generate the conformance tests list using the test-conformance
      binary.

    » Implement interval progress functions for ActorBox, Vertex, Geometry,
      Color and Units.

    » Allow overriding the surface creation in Clutter.CairoTexture.

    » Add interpolate() method to Clutter.Color.

    » Add ClutterPathConstraint, a simple constraint that sets the origin
      of an actor's allocation to follow a ClutterPath.

    » Plug some memory leaks.

    » Fix build of the CEx100 and EGL backends.

    » Fixes for the OSX backend.

    » Documentation consistency and spell checking fixes.

    » Build fixes.

Translation updates:

  Andika Triwidada (id), Damien Lespiau (fr), Piotr Drąg (po)

Many thanks to:

  Damien Lespiau, Neil Roberts, Kristian Høgsberg, Andika Triwidada,
  Ole André Vadla Ravnås, Robert Bragg, Owen W. Taylor, Piotr Drąg,
  Roland Peffer

Clutter 1.5.2  (04/10/2010)
===============================================================================

  • List of changes since Clutter 1.4.0

    » Add API to ClutterActor to allow any actor to define its 3D paint
      volume and its stage-relative 2D bounding box; the paint volume is
      the 3D space occupied by an actor during the paint sequence. This
      allows better sizing of the FBOs, and opens the door to scenegraph
      culling and accurate clipped redraws. The mechanism is opt-in: actors
      have to implement the get_paint_volume() virtual function. Callbacks
      attached to the ::paint signal will also disable any culling and
      clipped redraw in place internally.

    » Plug a leak in ClutterActor by disposing all constraints.

    » Rework the build system to be as non-recursive as possible; this should
      speed up the build of Clutter, and makes the build layout easier to
      understand and update.

    » Remove the internal copy of JSON-GLib; the internal copy was falling
      behind at a spectacular level, and it was actually making the build
      rather complicated - also by adding an unwanted, but needed,
      introspection data generation. The required JSON-GLib has also been
      bumped to the new stable release, 0.12.0.

    » Use g_object_install_properties() with GLib 2.26.

    » Implement ClutterContainer::child-notify, which slipped through the
      cracks of many development cycles without anyone noticing.

    » Document and test clutter_actor_contains(), especially the corner
      cases.

    » Plug a leak in CoglTexture2DSliced.

    » Plug a leak in ClutterAnimator's handling of timelines.

    » Trap glXDestroyPixmap() in CoglTexturePixmapX11 to avoid BadDrawable
      errors when the GLX pixmap is destroyed behind Cogl's back.

Many thanks to:

  Robert Bragg
  Neil Roberts
  Elliot Smith
  Alejandro Piñeiro
  Aron Xu
  Colin Walters
  Ray Strode
  Stephen Kennedy

Clutter 1.4.0  (24/09/2010)
===============================================================================

  • List of changes since Clutter 1.3.14

    » Add support for describing ClutterState states using ClutterAnimators
      in ClutterScript.

    » Build fixes

    » Include ClutterConstraints into the allocation phase, to avoid layout
      cycles and improve the performance.

    » Add new recipes to the Cookbook to illustrate constraints-based
      layouts.

    » Fix the request mode of ClutterBoxLayout.

    » Fix the handling of transformations in ClutterOffscreenEffect.

    » Documentation and introspection fixes.

Many thanks to:

  Elliot Smith
  Robert Bragg
  Neil Roberts
  Bastian Winkler
  Dominique Leuenberger
  Frederik Hahne
  Jammy Zhou
  Øyvind Kolås

Clutter 1.3.14 (15/09/2010)
===============================================================================

  • List of changes since Clutter 1.3.12

    » Fix applying layout properties from ClutterScript definitions in case
      of multiple children.

    » Add a Clutter EGL backend for Intel CEx100 platforms.

    » Add new recipes in the Cookbook:
      - texture cross-fading
      - ClutterScript definitions
      - event handling
      - ClutterAnimator
      - reusing complex animations

    » Add methods to retrieve the clicked button and to force a release
      in ClickAction.

    » Documentation fixes in the API reference.

    » Cache a full pick buffer and re-use it in case the scene does not change
      between events.

    » Fix a Valgrind report of memory corruption in ClutterState.remove_key().

    » Allow detaching animations created with clutter_actor_animate().

    » Depend on GObject-Introspection >= 0.9.5.

    » Provide introspection data for the X11-specific API, like
      ClutterX11TexturePixmap

    » Use a template material for ClutterTexture to minimize the creation of
      new materials.

    » Split ClutterDragAction:drag-threshold into two, per-axis properties:
      :x-drag-threshold and :y-drag-threshold.

    » Allow disabling the -Bsymbolic flag when linking.

    » Use gettext >= 0.17 to handle the localization.

    » Flush the framebuffer earlier when drawing the vertex buffers, to fix
      a crash when dealing with clip stacks.

    » Make sure ClutterX11TexturePixmap removes the Cogl texture handle before
      freeing the X11 Pixmap to avoid an error.

    » Avoid regenerating the CoglMaterial programs too many times.

Many thanks to:

  Elliot Smith
  Robert Bragg
  Damien Lespiau
  Neil Roberts
  Colin Walters
  Owen W. Taylor
  Bastian Winkler
  Alejandro Piñeiro
  Alexandros Frantzis
  Chris Kühl
  Luca Invernizzi
  Henrik Hedberg
  Javier Jardón
  Lucas Rocha
  Murray Cumming
  Øyvind Kolås

Clutter 1.3.12 (16/08/2010)
===============================================================================

  • List of changes since Clutter 1.3.10

    » New recipes in the Cookbook:
      - create and animate sub-textures
      - layout managers
      - scroll events

    » Set the ClutterTexture:filename property to also be readable.

    » Avoid layout cycles when creating ClutterLayoutMeta objects
      during the ::allocate implementation

    » Add a ClutterTableLayout, a layout manager for tabular layouts.

    » Capture ENTER and LEAVE events on the stage within the DragAction.

    » Plug memory leaks.

    » Use g_object_notify_by_pspec(), if available, to speed up the
      emission of the ::notify signal on property changes.

    » Re-use the Cogl texture atlas for the CoglPango glyphs cache,
      and improve the performance with large font sizes.

    » Various fixes in the Materials comparison and inheritance.

    » Add the ability to associate a user program to a material.

Many thanks to:

  Neil Roberts
  Elliot Smith
  Robert Bragg
  Damien Lespiau
  José Dapena Paz
  Owen W. Taylor

Clutter 1.3.10 (04/08/2010)
===============================================================================

  • List of changes since Clutter 1.3.8

    » Fix a locale-dependent conversion from double to string when
      generating ARBfp programs for the materials.

    » Use the XKB extension on X11 platforms to convert between hardware
      keys to key symbols.

    » Documentation fixes in the API reference.

    » More recipes, with videos and full examples, in the Cookbook.

    » Add localization support and initial translations of error messages
      that might be visualized in a user interface.

    » Improve debugging output.

    » Fix build of the GLX backend on OSX.

    » Multiple fixes to the native OSX backend.

    » Add support for 3D textures in Cogl.

    » Fix shader-related issues and leaks in the new Material code.

    » Unify GLSL support in the GL and GLES 2.0 drivers.

    » Allow specifying an hint to disable clearing the stage before each
      paint cycle.

Many thanks to:

  Neil Roberts
  Roman Kudiyarov
  Elliot Smith
  Robert Bragg
  Chris Kühl
  Chris Leick
  Nate Stedman
  happyaron
  raven
  Øyvind Kolås

Clutter 1.3.8 (12/07/2010)
===============================================================================

  • List of changes since Clutter 1.3.6

    » Merge Cally, the Clutter Accessibility Library, in the Clutter tree.

    » Take into consideration the source actor's position in the
      AlignConstraint logic.

    » Update the internal COGL tesselator with the latest GLU code.

    » Fix CoglTexture data readback.

    » Use GL_MAX_TEXTURE_SIZE on GLES when checking the supported texture size.

    » Add missing public functions from COGL headers.

    » Fix GLES build after the Cogl material changes.

    » Rename the experimental CoglPixelBuffer API to CoglPixelArray.

    » Split the clutter_state_change() method into two:
    clutter_state_set_state(), for animated state changes; and
    clutter_state_warp_to_state() for immediate state changes.

    » Documentation and introspection fixes.

    » Build fixes

Many thanks to:

  Robert Bragg
  Neil Roberts
  Elliot Smith
  Alejandro Piñeiro
  Øyvind Kolås
  Damien Lespiau
  Alexandros Frantzis

Clutter 1.3.6 (30/06/2010)
===============================================================================

  • List of changes since Clutter 1.3.4

    » Provide a fallback on GLX if the MESA_copy_sub_buffer extension is not
      available, by using EXT_framebuffer_blit. Both mechanisms are also
      throttled to avoid taking all resources when using them in a compositor
      like Mutter.

    » Use (and cache) fragment shaders instead of texture combiners inside
      Cogl materials. Cogl will automatically fall back from GLSL to ARBfp
      to fixed functions depending on the level of support of the underlying
      GL implementation.

    » Implement a new design for materials; this allows scaling up the
      number of materials in a scene, and also makes copying materials
      less expensive.

    » Make Cogl materials responsible for depth testing, and add new
      experimental API.

    » Use the (modified) GLU tesselator to draw paths to a vertex buffer
      object instead of using the stencil buffer, or the scanline rasterizer
      on platforms without a stencil buffer.

    » Add ClutterDeformEffect, a base class for effects that deform an
      actor's geometry when painting it; ClutterPageTurnEffect is an
      implementation of a "page curl" deformation using the DeformEffect
      API.

    » Always use scissoring when clipping, to reduce the amount of buffer
      that has to be cleared.

    » Allow ClutterShaderEffect sub-classes to use vertex shaders by setting
      a constructor property; the default remains fragment shader.

    » Remove the button of the press event from the DragAction::drag-begin
      and DragAction::drag-end signals. This is an API break from 1.3.4.

    » Do not promote clipped redraws to full redraws.

    » Improve the consistency of the default state name in ClutterState,
      both in the API and in the serialization format.

    » Fix a rounding error with the Text layout size.

    » Add utility functions for CoglMatrix and CoglColor.

    » Avoid a re-allocation cycle warning when resizing the surface of
      a CairoTexture actor from within the allocate() implementation.

    » Do not add the GL libraries for the EGL X11 backend.

    » Add more checks for size of data passed to the shader types GValue
      functions.

    » Add width and height to the BindConstraint.

    » Parse actions, constraints and effects inside an actor definition
      for ClutterScript.

    » Merge the code of native and x11 backends for EGL into a single
      backend; also allow creating GL context with the EGL backend.

    » Use XSETTINGS to set up the backend configuration options, like
      the font name, resolution, font options and double click options,
      on X11; this also allows ClutterText actors created using the
      default font name to be updated when the font name and options
      change; similarly, this allows ClutterUnits to be updated when
      the screen resolution changes.

    » Implement the texture_from_pixmap extension support inside Cogl
      itself, and unify ClutterX11TexturePixmap and ClutterGLXTexturePixmap.

    » Documentation improvements in the API reference and in the cookbook.

    » Use the -Bsymbolic-functions linker option on supported platforms
      to avoid intra-library PLT jumps.

    » Fix painting transparent stages on X11 using the :use-alpha property
      of ClutterStage.

    » Fix emission of scroll events on Windows.

Many thanks to:

  Robert Bragg
  Neil Roberts
  Øyvind Kolås
  Damien Lespiau
  Elliot Smith
  Chris Lord
  Johan Bilien
  Richard Hughes
  Adel Gadllah
  Alejandro Piñeiro
  Colin Walters
  Dan Winship
  Kristian Høgsberg
  Sunil Sadasivan

Clutter 1.3.4 (07/06/2010)
===============================================================================

  • List of changes since Clutter 1.3.2

    » Add ClutterEffect, a ClutterActorMeta sub-class that affects the
      way an actor paints itself.

        » Clutter provides a base class for effects painting to an
          offscreen buffer, and a base class for effects using the
          GL programmable pipeline (through the GLSL shader language).

        » Clutter also provides some simple, shader-based effects:
          ClutterBlurEffect, ClutterColorizeEffect and
          ClutterDesaturateEffect.

        » Effects can be applied to any actor, and can also be stacked.

    » Add ClutterClickAction, an action that provides "button-like"
      semantics for any ClutterActor.

    » ClutterDragAction now moves the actor to which it has been applied
      by default, using a class handler for the ::drag-motion signal.

    » Add the :pick-with-alpha property to ClutterTexture; this property
      allows using the alpha channel of a texture when picking it.

    » Regenerate the mipmaps on COGL textures when a texture is modified.

    » Documentation and build fixes.

Many thanks to:

  Robert Bragg
  Damien Lespiau
  Neil Roberts
  Colin Walters

Clutter 1.3.2 (24/05/2010)
===============================================================================

  • List of changes since Clutter 1.2

    » Add ActorMeta, a class for run-time composition of actions and
      constraints on a ClutterActor:

        » Add ClutterAction, a class for implementing business logic
          related to event handling.

        » Add ClutterConstraint, a class for implementing business
          logic related to sizing and positioning.

        » ClutterDragAction is an Action sub-class that implements
          signals and properties for dragging actors.

        » ClutterAlignConstraint and ClutterBindConstraint are two
          Constraint sub-classes that allow relative positioning
          with fixed layout managers.

    » Add ClutterState, an object for defining state transitions.

    » Add ClutterBoxLayout:homogeneous property.

    » Implement retained clip stacks.

    » Support retained paths.

    » Add an experimental vector3 API.

    » Require GLib >= 2.18.

    » Require Atk >= 1.7.

    » Make ClutterActor implement AtkImplementor, and allow retrieving
      an AtkObject from a ClutterActor.

    » Improve ClutterText's Pango layout caching mechanism.

    » Fix set up of the GLX_SGI_swap_control extension.

    » Fix EGLX backend.

    » Documentation fixes for Clutter and COGL.

    » Fix the conformance test suite by executing every test unit in
      a separate process.

    » Add platform-dependent defines for Cogl.

    » Update the MingW cross-compilation script.

    » New recipe in the Cookbook.

Many thanks to:

  Neil Roberts
  Robert Bragg
  Øyvind Kolås
  Owen W. Taylor
  Brian Tarricone
  Damien Lespiau
  Adel Gadllah
  Chris Lord
  Fridrich Strba
  José Dapena Paz
  Jussi Kukkonen
  Rob Bradford

Clutter 1.2.2 (15/03/2010)
===============================================================================

  • List of changes since Clutter 1.2.0

    » Fix introspection annotations for ClutterBox

    » Compilation fixes for the EGL native backend

    » Fix ClutterX11TexturePixmap ::queue-damage-redraw default handler
      registration to avoid a run-time warning

    » Handle TEXTURE_RECTANGLE_ARB in the 2D sliced textures, and add
      a test case for that extension to avoid regressions

    » Improve the strictness of the JSON parser in the internal copy
      of JSON-GLib to which we fall back in the absence of the system
      one

    » Fix a crasher on NVidia drivers when enabling the ARGB visuals
      by default on GLX.

Many thanks to:

  José Dapena Paz
  Neil Roberts
  Owen W. Taylor
  Øyvind Kolås

Clutter 1.2.0 (02/03/2010)
===============================================================================

  • List of changes since Clutter 1.1.14

    » Improve the Animator API for consistency, and the implementation
      to match the intended behaviour, as documented

    » Add initial (and internal) support for queueing clipped region updates
      and let the GLX texture-from-pixmap actor take advantage of it

    » Support any pixel format in cogl_read_pixels()

    » Conditionally use G_VALUE_COLLECT_INIT() in functions using variadic
      arguments lists

    » Consistently use :min-width and :min-height inside the Stage to define
      the minimum size of the Stage window

    » Implement the Scriptable interface for ClutterModel sub-classes; this
      allows setting ClutterModel columns (both types and names) in
      ClutterScript definitions

    » Add support for unsigned integer indices in the VertexBuffer API

    » Documentation fixes for Clutter: the coverage is now 100%

    » Fixes for the EGL native backend

    » Require libtool >= 2.2.6

    » Improve tests coverage

Many thanks to:

  Neil Roberts
  Øyvind Kolås
  Robert Bragg
  Bastian Winkler
  Chris Lord
  Owen W. Taylor

Clutter 1.1.14 (24/02/2010)
===============================================================================

  • List of changes since Clutter 1.1.12

    » Fix interaction between user resizable Stages and fullscreen on X11

    » Define the semantics of ENTER and LEAVE events when actors are on the
      border of the Stage window

    » Take the InputDevice of an event into consideration when throttling
      MOTION events

    » Round the coordinates when clipping to a rectangle in window coordinates

    » Always trust the user-provided coordinates when creating a CoglTexture
      from a foreign GL texture

    » Split Clutter's debug annotations from the pick and paint mode
      behavioural modifiers

    » Improve the usage of the CLUTTER_ACTOR_NO_LAYOUT flag so that every
      actor using a ClutterFixedLayout manager will automatically benefit
      from it

    » Fix the packing order of ClutterBox so that the convention of
      first-in-first-painted is maintained

    » Documentation fixes

Many thanks to:

  Robert Bragg
  Chris Lord
  Neil Roberts

Clutter 1.1.12 (16/02/2010)
===============================================================================

  • List of changes since Clutter 1.1.10

    » Fix compilation on 64bit platforms

    » Fix some races of the Stage resizing on X11

    » Documentation fixes for Cogl: the coverage is now 100%

    » Fix rounding errors in the preferred height of the ClutterText
      actor

    » Remove redundant type checks in clutter_actor_get_paint_opacity()

    » Add support for the GLX_INTEL_swap_event extension; when using this
      extension on GLX the glXSwapBuffers() call becomes non-blocking and
      Clutter will use an event to control the master clock.

    » Improve consistency between ClutterBox and ClutterGroup.

    » On X11, do not set the _NET_WM_PID and WM_TITLE properties on a
      Stage X window if the window was not created by Clutter itself

    » Improve caching of GL constant values

    » Optimize creating sub-textures of sub-textures

    » Various fixes for the atlas and the journal

    » Disable the atlas if FBOs are not supported

Many thanks to:

  Robert Bragg
  Neil Roberts
  Damien Lespiau
  Bastian Winkler
  Chris Lord

Clutter 1.1.10 (09/02/2010)
===============================================================================

  • List of changes since Clutter 1.1.8

    » Fixed a regression in textures that caused all the textures to be
      drawn as white rectangles.

    » Fixed compilation with the Sun C compiler.

    » Use SSE2 instructions to premultiply RGBA images, if available.

    » Improve readability of ClutterActor::raise/::lower warnings.

Many thanks to:

  Neil Roberts
  Halton Huo

Clutter 1.1.8 (08/02/2010)
===============================================================================

  • List of changes since Clutter 1.1.6

    » Added ClutterAnimator, a class that allows defining complex
      implicit animations involving multiple actors and states; this
      class is mostly meant to be used through the ClutterScript
      definition format, but it provides a convenience C API for
      easily building animations.

    » New experimental COGL API to expose "hardware" buffers such as PBOs or
      drm surfaces. This API can be used, for instance, to make texture
      uploading faster.

    » Fixed the issues with resizable stages getting a 1x1 window with
      the X11 backends

    » Expose input devices for every event; by default, X11 and Windows
      backends expose the core devices only.

    » Add the ClutterStage:key-focus property, for key focus tracking.

    » Allow setting transformable value types in ClutterAnimation when
      calling clutter_animation_bind() and clutter_animation_update().

    » Delay the creation of the default Stage until clutter_stage_get_default()
      is actually called; this reduces the work of clutter_init().

    » Implement Ctrl+Delete and Ctrl+Backspace in ClutterText

    » Improve the extendability of CoglTexture with internal backends.

    » Add implicit texture atlasing; Cogl will try to put every texture
      inside the same texture atlas by default, to avoid state changes
      in the driver and (hopefully) improve performance.

    » Fix notification of the cursor and selection changes in ClutterText;
      this improves the usage of Clutter from A11Y toolkits.

    » Do not wait for a frame if the system clock goes backwards.

    » Fix the dirtying of the clip state; this unbreaks cogl_path_fill().

    » Documentation and build fixes.

Many thanks to:

  Neil Roberts
  Chris Lord
  Damien Lespiau
  Alejandro Piñeiro
  Jussi Kukkonen
  Kristian Høgsberg
  Robert Bragg
  Øyvind Kolås

Clutter 1.1.6 (18/01/2010)
===============================================================================

  • List of changes since Clutter 1.1.4

    » Some fixes for the Win32 backend (bug #1905).

    » Profiling support via the UProf library. Configure with
      --enable-profile to get a report after each Clutter application is
      run.

    » Improved conformance tests with coverage reports via gcov.

    » ClutterTexture no longer tries to read back texture data into
      g_malloc'd memory on unrealize (bug #1842).

    » The CGL_• defines from cogl-defines.h have been removed. These
      should not have been used by any applications, but if they were
      being used then please replace them either with the Cogl enums or
      with the appropriate GL_• enum if you are using GL directly.

    » Added a delete-event signal to the stage.

    » Fix for using cogl_rectangle with different texture coordinates
      for multiple layers (bug #1937).

    » Fix for using stencil and depth buffers in FBOs on Intel drivers
      in Mesa (bug #1873).

    » Support for subtitles in ClutterMedia.

    » ClutterGLX will now use an RGB visual by default. For
      applications (and toolkit integration libraries) that want to
      enable the ClutterStage:use-alpha property there is a new
      function: clutter_x11_set_use_argb_visual().

    » Fix ClutterText to allow using Pango markup and attributes in
      the same actor (bug #1940).

Many thanks to:

     Alejandro Piñeiro
     Damien Lespiau
     Emmanuele Bassi
     Gord Allot
     Halton Huo
     Robert Bragg
     Samuel Degrande

Clutter 1.1.4 (03/01/2010)
===============================================================================

  • List of changes since Clutter 1.1.2

    » Update the ClutterScript parser to be more resilient, and support
      constructor and ChildMeta properties. The parser also respects the
      order of the properties in the UI definitions when applying them,
      and will apply the properties of an Actor after building the scene
      graph.

    » Simplified the implementation of LayoutManager sub-classes, and added
      support for animating a layout manager.

    » Allow short-circuiting some layout operations by setting a specific
      flag on ClutterActor.

    » Improve caching of the preferred size of a ClutterActor.

    » Allow declaring "internal children" for a ClutterContainer
      implementation: the memory management of these actors will be deferred
      entirely to the Container.

    » Let the ClutterStage honour the :opacity property and the alpha component
      of the stage color. This requires support in the Clutter backend used.

    » Improve Windows and OSX backends.

    » Simplify the feature detection code for OpenGL; this also reduced the
      required OpenGL version to 1.2.

    » Improve the matrix stack handling code. The matrices can be debugged by
      using the COGL_DEBUG environment variable, assuming that Clutter was
      compiled with the right configure-time switch.

    » Improve COGL API for draw buffers, and for offscreen buffer support.

    » Add support for text direction to ClutterActor.

    » Documentation, introspection and build fixes.

Many thanks to:

  Robert Bragg
  Neil Roberts
  Damien Lespiau
  Joshua Lock
  Bastian Winkler
  Rob Bradford
  Samuel Degrande
  Christian Persch
  Colin Walters
  Johan Bilien
  Raymond Liu
  Tim Horton

Clutter 1.1.2 (23/10/2009)
===============================================================================

  • List of changes since Clutter 1.0

    » Add ClutterLayoutManager, an abstract proxy class for easily
      writing layout management policies; also add ClutterLayoutMeta,
      a class for storing layout properties.

    » Add ClutterBox, a generic container actor that relies on a
      ClutterLayoutManager instance to manage the layout of its
      children.

    » Add the following layout managers:

      - ClutterFixedLayout - a layout manager implementing the
        policy used by ClutterGroup

      - ClutterBinLayout - a layout manager for packing actors
        as layers inside the same area, with per-actor alignment

      - ClutterFlowLayout - a layout manager arranging actors as
        a reflowing grid

      - ClutterBoxLayout - a layout manager arranging actors as
        a single line

    » Remove the requirement for the backend-specific implementation
      of ClutterStage to be a ClutterActor: a Stage implementation must
      only implement the ClutterStageWindow interface. This cleans up
      the backend code.

    » COGL source tree clean up and rationalization; COGL now
      knows the platform, and not only the driver (GL or GLES) so
      we can migrate part of the low-level backend code from Clutter
      to COGL where it makes sense.

    » Remove code duplication across whole COGL.

    » The GLES 2.0 driver for COGL, and the EGLX backend for Clutter
      have been fixed and confirmed working.

    » Add "dump-pick-buffer" to CLUTTER_DEBUG: this debug options
      dumps the contents of each pick() buffer into a PNG file, for
      debugging purposes.

    » Allow interpolating intervals of ClutterUnits for animating
      unit-based properties.

    » Increase strictness and correctness of the ClutterUnits
      grammar parser.

    » Add GValue transformation functions for ClutterPath to and
      from a string.

    » Fix word movement in ClutterText; implement GObject getter for
      :use-markup; emit notification for :position; decouple the
      :text property from the :use-markup property.

    » Do not queue redraws or relayouts on actors currently being
      destroyed. 

    » Support #rrggbb and #rgb notations for ClutterColor.

    » Multiple bug fixes.

    » Provide _NET_WM_PID on the X11 stage implementation.

    » Documentation and Introspection annotation fixes.

    » Add test units for the ClutterActor size requesition.

    » Build fixes.

    » Use AM_SILENT_RULES if Automake 1.11 is detected, and fall
      back to Shave on older Automake versions.

Many thanks to:

  Robert Bragg
  Damien Lespiau
  Neil Roberts
  Thomas Wood
  Owen W. Taylor
  Øyvind Kolås
  Götz Waschk
  Zhou Jiangwei
  Colin Walters
  Jonas Bonn
  Joshua Lock
  Jussi Kukkonen
  Samuel Degrande
  Vladimir Nadvornik
  Xu Li

Clutter 1.0.0 (28/07/2009)
===============================================================================

  • List of changes since 0.9.8

    » Allow per-stage disabling of motion event throttling; this should allow
      platforms or applications that require all the motion events not for
      drawing purposes to get them exactly like Clutter gets them from the
      windowing system.

    » Various documentation fixes.

    » Add per-word key navigation inside ClutterText.

    » Fix the RGB<->HLS conversion.

    » Various fixes for the OSX backend.

    » Various build-related fixes.

Many thanks to:

  Geoff Gustafson
  Michael Mortensen
  Owen W. Taylor

Clutter 0.9.8 (17/07/2009)
===============================================================================

  • List of changes since 0.9.6

    » Add more introspection annotations for language bindings.

    » Fix a bug in clutter_animation_set_alpha(), which also broke the
      clutter_actor_animate_with_alpha() function.

    » Check if the stage requires a relayout before showing it; this fixes
      a bug in the X11-based backends, especially under compositing window
      managers, where a 640x480 window would flicker before the default
      stage was shown for the first time.

    » Performance fixes for Cogl.

    » Sliced textures were broken by the COGL journalling.

    » Use the redraw cycle when asynchronously loading textures from
      files.

    » Miscellaneous compilation fixes for the OS X and Windows backends.

    » Allow querying from within the paint function of an Actor whether
      the actor is currently being directly painted or by a Clone actor.

    » In the GLX backend, when using the non-implicit sync-to-vblank inside
      glXSwapBuffers(), call glFinish() to avoid potential tearing.

Many thanks to:

  Colin Walters
  Evan Martin
  Marcos
  Owen W. Taylor
  Xu Li

Clutter 0.9.6 (01/07/2009)
===============================================================================

  • List of changes since 0.9.4:

    » Allow the manipulation of the actor's transformation matrix, so that is
      is possible to apply additional transformations in a way that is
      compatible with the transformations already applied by the scene graph.

    » Fix a race in the X11 backend that happened between resizing the stage
      drawable and the call to glViewport().

    » Merge the cogl-journal-batching branch; this branch implements batching
      the geometry of the elements of the scene graph before sending it to
      OpenGL, thus minimizing the number of state changes and improving the
      overall performance of Clutter-based applications.

    » Add more debugging states for Clutter and COGL, which allow the developer
      to track the state of the journal; to check the VBO fallback paths; to
      disable picking for reliable profiling; to disable software-side matrix
      transformations in favour of the driver/GPU ones.

    » Improve the ability to "break out" of COGL by using gl_begin/gl_end
      semantics; applications that drop into raw GL are, though, ignoring all
      the caching performed by COGL and might incur in performance issues.

    » Fixed the :load-async and :load-data-async properties of Texture by
      removing the unneeded G_PARAM_CONSTRUCT flag.

    » Added an initial migration guide that shows the porting process from
      older releases of Clutter to the 1.0 API; the first chapter deals with
      the migration from ClutterEffect to the new implicit animations API.

    » Fixed MT-safety for the master clock.

Many thanks to:

  Ole André Vadla Ravnås
  Tim Horton

Clutter 0.9.4 (19/06/2009)
===============================================================================

  • List of changes since 0.9.2:

    » Set the layout height in ClutterText, so that wrapping and ellipsization
      work correctly to fill all the allocated area.

    » Remove all the units-based API, and migrate all the positional and
      dimensional accessors to use floating point values when dealing with
      pixels. All the properties dealing with pixels now that a floating
      point value as well.

    » Add the ability to track wether an actor is going to be painted or not,
      using the "mapped" flag. This also allows Clutter to be more strict
      in the handling of the scenegraph, ensuring correctness and avoiding
      wasting resources on nodes that won't be painted.

    » Add debugging facilities for COGL, similar to those of Clutter; through
      them is also possible to have an on screen debugging mode that shows the
      boundaries of each rectangle sent to the GPU.

    » Rework "units" into real logical distance units that can be converted
      between millimeters, typographic points and ems into pixels.

    » Simplify the Animation class to avoid redundancy and the possibility
      of it going out of sync with the Timeline and Alpha instances it uses.

    » Move every operation into a single "master clock" source that advances
      the timelines, dispatches events and redraws the stages in a predictable
      sequence, thus avoiding unneeded redraws. The default is to follow the
      sync-to-vblank cycle, if it is supported by the drivers.

    » Cache the glyphs geometry into a vertex buffer object to avoid
      resubmitting too much information to the GPU.

    » Rework the behaviour of ClutterModel when a filter is applied.

    » Allow submitting premultiplied texture data; this removes the need
      for unpremultiplying data in CairoTexture.

    » Add a simple API for submitting blending and texture combining modes
      through a string description.

    » Move Timelines to pure time-based objects.

    » Lots of performance improvements.

    » Removal of all the deprecated API.

    » Removal of all the fixed point entry points.

    » Lots of documentation fixes - the coverage is now 99% of the exported
      1600 symbols for Clutter and 80%+ of the 300 exported symbols for COGL.

    » Generate the GObject Introspection data for both Clutter and COGL
      at build time.

    » Build environment fixes.

Many thanks to:

    Owen W. Taylor <otaylor@fishsoup.net>
    Thomas Wood <thomas.wood@intel.com>
    Havoc Pennington <hp@pobox.com>
    Bastian Winkler <buz@netbuz.org>
    Chris Lord <chris@linux.intel.com>
    Garry Bodsworth <gjb@camvine.com>
    Rob Bradford <rob@linux.intel.com>
    Johan Bilien <jobi@litl.com>
    Jonas Bonn <jonas@southpole.se>
    Raymond Liu <raymond.liu@intel.com>
    Damien Lespiau <damien.lespiau@gmail.com>
    Dan Winship <danw@gnome.org>
    Marc-André Lureau <marcandre.lureau@gmail.com>
    Robert Staudinger <robsta@gnome.org>
    Tommi Komulainen <tko@litl.com>

Clutter 0.9.2 (16/03/2009)
===============================================================================

Bastian Winkler (2):
      [media] Fix the interface cast macro
      Remove redundant declaration in clutter-text.h

Chris Lord (1):
      [actor] Force a relayout on set_parent()

Christian Persch (1):
      Bug 1429 - Redundant declaration in clutter-x11.h

Colin Walters (3):
      Bug 1491 - Fix hardcoded lib path in .pc files
      Typo in clutter-win32.pc.in introduced by commit 24ce19383
      [animation] Enhance the bind API

Damien Lespiau (6):
      [gitignore] update gitignore files for tests/
      [build] Beautify autotools' output
      [build] Add dolt
      [build] Fix interaction between shave, gtk-doc and libtool 1.x
      [build] Fix dist for the newly introduced m4 macro directory
      Update shave

Emmanuele Bassi (111):
      Post-release bump to 0.9.1
      [text] Merge the attributes with markup enabled
      [tests] Update the text-field interactive test
      Add Actor::create_pango_layout()
      [docs] Add clutter_text_set_markup()
      [clone] Allow cloning unparented actors
      [text] Use create_pango_layout()
      [text] Rename :alignment to :line-alignment
      [texture] Consolidate the quality to filter conversions
      [texture] Check if the material is valid
      [event] Extend KeyEvent for multi-input support
      [actor] Check out parameters before setting them
      [list-model] Make ClutterListModel subclassable
      Bug 1440 - Add clutter_get_current_event_time()
      [tests] Add TEST_CONFORM_SKIP() macro
      [tests] Add conformance tests for ClutterModel
      [ignore] Add the newly created conformance units
      [actor] Revert part of commit 402e022c
      [animation] Do not bind construct-only properties
      [x11] Add backend-specific get_current_event_time()
      Initialize a variable to avoid warnings
      [cogl] Add cogl_is_material to cogl-material.h
      [cogl] Provide GTypes for COGL types
      [texture] Use COGL_TYPE_HANDLE for the handle properties
      [docs] Clarify the set_cogl_texture() documentation
      Merge branch 'build-enhancements'
      [docs] Add a missing "return" annotation
      [build] Pass the -s switch to cmp
      Remove type functions for removed types
      [docs] Update the sections file
      [tests] Add TEST_CONFORM_TODO macro
      [build] Show pkg-config file being generated
      [build] Reference the headers with their full path
      [docs] Update build for COGL API reference
      [build] Update the EXTRA_DIST list
      [build] Fix the ChangeLog generation rule
      [build] Do not overwrite BUILT_SOURCES
      [behaviour] Do not notify empty behaviours
      [path] Do not accept NULL descriptions
      [timeline] Set the n_markers out paramater
      Do not use GL types in Clutter headers
      [docs] Require gtk-doc 1.11
      [docs] Use the --name-space option
      [docs] Add the 1.0 symbols index
      [docs] Rename cogl-docs from sgml to xml
      Add build machinery for gobject-introspection data
      [backend] Update the viewport when updating the GL context
      [build] Move all the compiler flags to AM_CFLAGS
      [ignore] Update with the introspection files
      Add runtime debug messages for COGL
      [actor] Remove usage of ClutterFixed
      Make disable text mipmapping a command line switch
      Make fuzzy picking a command line switch
      [docs] Document envvars and command line switches
      Remove stray fixed point macro usage
      Use a dynamic array for the actors when delivering events
      [media] Add sub-second resolution for the duration
      [build] Put the X11 pc dependencies in another variable
      [build] Do not shave typelib generation
      Intern the ClutterScriptable type name
      [backend] Constify font options
      [cogl] Add a PANGO debug flag for CoglPango use
      Clean up of the ClutterColor API
      [shader] Unify code paths
      Add pkg-config file for COGL
      [build] Various fixes for distcheck
      [docs] Clarify clutter_actor_animate() behaviour
      [docs] Note that grabs are evil
      [cogl-fixed] Add a double-to-fixed conversion macro
      Move BehaviourScale to CoglFixed
      Move ClutterBehaviourEllipse to CoglFixed
      Move ClutterBehaviourRotate to CoglFixed
      Move ClutterTimeline to CoglFixed
      [cogl-fixed] Implement the CoglFixed fundamental GType
      [tests] Test CoglFixed, not ClutterFixed
      [interval] Update fixed-point handling
      [stage] Coalesce fog and perspective API
      [texture] Fix ClutterFixed usage
      [text] Convert units to the right type
      [tests] Use floats, not ClutterFixed
      [units] Add more conversion functions
      [fixed] Remove ClutterFixed API
      [cogl] Fix hardcoded paths in the pc file
      [docs] Remove ClutterFixed from the documentation
      [docs] Update API reference
      [animation] Add vector variants for ::animate()
      [cogl] Initialize boolean flag in CoglContext
      [cogl] Initialize all members of CoglContext
      [color] Fixed HLS to RGB conversion
      [docs] Calling g_object_ref() will not dispose an object
      [docs] Document the commit message format
      [tests] Animate the color during easing
      [docs] Reword some of the coding practices
      [docs] Add a bindings coding practices
      Add more deprecation notices
      [deprecated] Add Effect deprecation
      Do not cause more size requisitions than necessary
      [cogl] Avoid shadowing math.h symbols
      [docs] Clarify Animation memory management
      [animation] Add an emitter for ::completed
      [animation] Add Animation getter
      [tests] Remove unused variables
      [docs] Add description of queue_redraw
      [docs] Update after Animation API changes
      [animation] Enhance consistency of the Animation API
      [docs] Bring down the undocumented symbols to 2%
      Fix release date of 0.9.0
      Update release notes
      [docs] Fix naming of the interval parameter
      [docs] Ignore the TimeoutInterval internal API
      Update release notes

Geoff Gustafson (1):
      [animation] Broken fixed:: properties

Gordon Williams (1):
      [group] Output the group name when debugging paint

Havoc Pennington (4):
      Virtualize GL matrix operations and use a client-side matrix when GL is indirect
      [actor] Add :clip-to-allocation property
      [actor] Add ::queue-redraw signal
      [cogl] Flush matrix before clip planes

Jonathan Matthew (1):
      Declare the EnumValues for PixelFormat static

Neil Roberts (36):
      [cogl-material] Always bind the new texture handle
      Fix building GLES 2 after the material branch merge
      [cogl-texture] Fix the count for the number of enabled arrays
      [cogl-gles2-wrapper] Remove the FIXME to adjust the fragment color
      [clutter-clone] Override the parent opacity to self not self->parent
      [clutter-texture] Release the temporary ref taken when setting a texture
      [clutter-texture] Unref the Cogl material on dispose
      [clutter-texture] Fix the no_slice property
      [cogl-texture] Fix offset to next quad when flushing the log
      [cogl-texture] Move the destruction of the material to _finalize
      [cogl-texture] Fix uninitialised priv var in texture_finalize
      Added a test for non-power-of-two sized textures
      Emit CLUTTER_LEAVE events when the pointer leaves the stage
      Call glActiveTexture and glClientActiveTexture through cogl_get_proc_address
      [win32] Track mouse leave messages
      [clutter-main] Fix the input device passed to set_motion_last_actor
      Override the opacity when painting a clone instead of combining
      Allow rotation angle properties to be negative
      [ClutterBehaviourRotate] Fix up some breakage from the cogl-float branch merge
      [tests/conform] Copy in redhand.png
      Replaced ClutterFixed constants in color_{darken,lighten} with float
      [cogl-gles2-wrapper] Convert texture unit settings to be a static sized array
      [cogl-gles2-wrapper] Actually call glActiveTexture
      Add an environment variable to disable mipmapped text
      [tests/tools] Don't install libdisable-npots.so
      [clutter-texture] Use a GThreadPool for loading async textures
      [cogl-pango-glyph-cache] Fix compiler warning on 64-bit
      Fix warning in clutter-backend-sdl
      [eglnative] Add -I flags for the clutter dir in the src and build dirs
      Set the mapped flag on the stage in the SDL and eglnative backends
      Fix out of tree builds
      Remove use of $(builddir)
      [README] Small typo fix
      Change cogl_path_rectangle and cogl_path_round_rectangle to take x1,y1,x2,y2
      [cogl-path] Minor fix to gtk-doc
      Count timeline frames using the FPS instead of an integer interval

Owen W. Taylor (7):
      Honor ACLOCAL_FLAGS in autogen.sh
      Add gobject-introspection annotations
      Fix x/y confusion for GL_TEXTURE_RECTANGLE_ARB
      Use COGL to establish GL state for ClutterGLXTexturePixmap
      Add (out) annotations for ClutterActor
      Allow NULL for clutter_text_set_text()
      Avoid drawing twice if relayout queues a draw

Raymond Liu (2):
      [text] Crash when multi-byte utf8 text exceeds max_length
      [text] Insertion of multi-byte characters broken

Robert Bragg (28):
      [Cogl] Renames cogl_fog_set to cogl_set_fog for consistency
      [cogl-material] Fixes some dirty flag checks
      [cogl-vertex-buffer] Some fixes for texturing and color arrays
      [docs] Various gtk-doc updates for Cogl
      [tests] Some improvements for test-pixmap
      [Cogl] cogl_clip_{set•,unset} renamed to cogl_clip_{push*,pop}
      [Cogl] Renames cogl_paint_init to cogl_clear and adds a cogl_disable_fog function
      [cogl-color.c] #include fix for the cogl_set_source_color prototype
      [Cogl] the cogl_get_•_matrix functions now work with CoglMatrix types
      [Cogl] Fixes automatic handling of the GL blend enable state.
      [cogl-material] Always glBindTexture when flushing material state
      [Cogl] Remove a debugging assert that was triggering on false positives
      [test-vertex-buffer-contiguous] Improves the texturing test
      [cogl-matrix] Adds padding to CoglMatrix
      [cogl-matrix] Documents that CoglMatrix members should be considered read only
      Removes need for casting (const float •) to (GLfloat *) in _cogl_set_clip_planes
      80 char fix
      Avoid casting CoglMatrix to a GLfloat • when calling glGetFloatv
      Explicitly make the modelview-matrix current in cogl_{rotate,transform,etc}
      Use Cogl enum when making modelview-matrix current in cogl_{rotate,transform,etc}
      Finish GLES{1,2} support for client side matrix stacks
      Maintain the Cogl assumption that the modelview matrix is normally current
      Merge branch 'cogl-client-matrix-stacks'
      [cogl-vertex-buffer] Add a flush of attribute changes in the •_draw() functions
      [cogl-vertex-buffer] Allow querying back the number of vertices a buffer represents
      [cogl-vertex-buffer] fix cogl_vertex_buffer_draw_elements prototype
      [tests] Adds an interactive cogl vertex buffer unit test
      [cogl] Don't endlessly print the same warning regarding layer fallbacks

Robert Staudinger (1):
      [build] Add cogl.h to the built sources list

Shane Bryan (1):
      Bug 1434 - _NET_WM_NAME not set before realize

Tomas Frydrych (3):
      Fixed handling of enter and leave events in clutter_x11_handle_event()
      Fix clutter_x11_texture_pixmap_get/set_property() following change of PROP_WINDOW type
      [x11] Only update cached last event time if we have a real timestamp.

Øyvind Kolås (11):
      Added a mutex for clutter asynchronous textures threads.
      Bail early in clutter_texture_paint if opacity == 0
      Add a warning for recursive emit_event
      Change the default size of thread pool from 3 to 1
      [tests] Added test-texture-async
      [clutter-texture] add option to not block on size for loaded images
      [clutter-texture] remove load-size-async property
      Merge commit 'origin/async-texture-thread-pool' into async-size
      [clutter-texture] updated documentation.
      [clutter-texture] fixed gtk-doc formatting, and init threads in test.
      Merge branch 'async-texture-thread-pool'

Clutter 0.9.0 (30/01/2009)
===============================================================================

 • List of changes between 0.8.6 and 0.9.0

   » ClutterText is a new actor allowing text display, text editing
     both in multi-line and single-line modes, and text selection using
     the pointer devices and the keyboard. ClutterText supercedes both
     ClutterLabel and ClutterEntry.
   » ClutterClone is a new actor that allows cloning of other actors,
     both simple and composite. ClutterClone supercedes ClutterCloneTexture.
   » ClutterBindingPool is a new API that allows to easily add key bindings
     to an actor.
   » ClutterAnimation is a new API for implicit animations, similar to
     the tweening API used in toolkits like jQuery, Tween and Flash. This
     new API supercedes the ClutterEffect API.
   » ClutterAlpha uses "animation modes" instead of raw function
     pointers; it is still possible to pass alpha functions. The alpha
     functions provided by Clutter have been removed from the public
     API. It is possible to register global alpha functions and use
     them though a logical id.
   » The interval of the ClutterAlpha:alpha property has been changed
     to a floating point value in the [ -1.0, 2.0 ] range; this allowed
     the addition of "overshooting" easing modes.
   » COGL now supports backface culling.
   » The COGL-based Pango renderer is public API and it is accessible
     to developers. It is also possible to access the PangoContext used
     by Clutter in order to create PangoLayouts to render text.
   » The ClutterFixed API has been moved to COGL.
   » COGL does not depend on Clutter data types anymore.
   » The ClutterMedia interface has been overhauled: implementations
     now must only override the interface properties. The ranges of
     some properties have been changed to normalized values.
   » COGL now exposes only floating point entry points, and reserves
     the eventual conversion to fixed point only when needed. The
     fixed point type and macros are publicly available for developers
     concerned about floating point operations.
   » COGL has a new Vertex Attribues API that allows submitting an
     extensible number of vertex attributes to OpenGL in a way that
     does not require format conversions and allows fast re-use.
   » COGL has a new Material API that decouples paths from fills; it
     is possible to create an arbitrary path and fill it with a COGL
     texture. The Material API also allows setting multiple texture
     layers and defining the blend modes and colors.
   » ClutterTexture has the ability to use a worker thread to asynchronously
     load an image from a file, as long as the GLib threading support has
     been enabled prior to calling clutter_init().
   » Clutter now supports localization of the help output, and it
     also supports globally setting the text direction for non left to
     right locales.
   » ClutterCairoTexture is a new actor that allows using Cairo
     to draw on a ClutterTexture; since Cairo does not have an OpenGL
     backend, the drawing is not hardware accelerated.
   » Clutter has a unit testing suite, based on the GLib unit test
     framework, which can be used to track regressions.
   » A ClutterPath object has been added, and it is used by the
     BehaviourPath. The Path object allows defining paths using a set
     of coordinates and operations. A Path can be "painted" either using
     COGL primitives or using Cairo primitives, allowing an easier way
     to paint non-rectangular shaped actors.
   » ClutterInterval is a simple object, used by ClutterAnimation, that
     describes an interval between two values, and interpolates between
     the initial and final values of the interval.

 • List of bugs fixed since 0.8.6

   » #835 - Optimize clutter_actor_real_pick()
   » #851 - setting anchor point causes picking problem
   » #883 - Outstanding COGL merge issues
   » #1003 - Add clutter_actor_take_key_focus
   » #1014 - Clutter Animation API Improvements.
   » #1049 - Clutter doesn't support most GLSL uniforms
   » #1051 - WebKit/Clutter product/component?
   » #1058 - Build clutter-box2d with Clutter 0.8
   » #1066 - Clipping regression in 0.8
   » #1086 - virtualize stage_queue_redraw
   » #1105 - low level access to PangoClutter
   » #1106 - ClutterText instead of ClutterLabel and ClutterEntry
   » #1108 - Enter/Leave events logics wrt. skipped motion events
   » #1109 - clutter-0.8.0 fails to compile
   » #1123 - Crash when FBO actor is used and the stage is MINIMIZED
   » #1144 - Provide an option to load images asynchronously in ClutterTexture
   » #1162 - Add unit testing for Clutter
   » #1164 - Mesh API
   » #1172 - Disjoint paths and clip to path
   » #1189 - Backface culling
   » #1209 - Move fixed point API in COGL
   » #1210 - Add CoglColor API
   » #1211 - Drop ClutterFeatureFlags usage from COGL
   » #1212 - Allow only a single include file for Clutter
   » #1215 - Move the Pango renderer to the public API
   » #1219 - Clean up cogl.h
   » #1231 - Build fails in gles flavour in revision 3442
   » #1233 - CLUTTER_ALPHA_SINE_INC is broken in trunk
   » #1251 - Merge the Cairo texture actor in core
   » #1252 - Merge ClutterBehaviourPath and ClutterBehaviourBspline
   » #1261 - [patch] Minimize differences between gl/cogl-texture.c and
     gles/cogl-texture.c
   » #1269 - mingw32 building failed at clutter-media.c
   » #1270 - Update to mingw-cross-compile.sh
   » #1271 - mingw compiling failed:  undefined reference to
     `_glDrawRangeElements@24'
   » #1284 - Return something reasonable from clutter_x11_handle_event()
   » #1300 - clutter_score_remove and clutter_score_remove_all  are different
     in object remove
   » #1310 - font rendering problem
   » #1313 - Fix computation of camera distance
   » #1314 - clutter_sinx() is more inaccurate than it needs to be
   » #1321 - Get Matrix in float
   » #1323 - ClutterBehaviorDepth conflicts with other behaviors
   » #1325 - ClutterPath to cairo_path_t conversion functions
   » #1330 - We should not queue redraw for non-visible actors
   » #1334 - Default value for ClutterLabel::text should be "" instead of NULL
   » #1344 - clutter_actor_transform_stage_point gives invalid coordinates
     for big actors
   » #1352 - Weird cogl-pango.h includes in clutter-[entry|label].c
   » #1354 - Floating point exception when set fps>1000 and start timeline
   » #1361 - Unused ClutterStage::get_resolution() methods
   » #1365 - ClutterEntry doesn't get the cursor when it should
   » #1366 - disable-npots fails to build on mac
   » #1380 - Return booleans from CLUTTER_ACTOR_IS_• macros
   » #1386 - Wrong clipping dimensions for larger actors
   » #1387 - Clarify new-frame signal emission with advance()
   » #1388 - Clarify signal emission for advance_to_marker()
   » #1395 - behaviour_apply and behaviour_get_nth_actor are opposite on
     actors sequence
   » #1397 - clutter command line is not localized.
   » #1402 - Change default tile-waste from 64 to 63
   » #1403 - ClutterMedia::get_uri() should return allocated string
   » #1404 - ClutterMedia issues
   » #1405 - Fix properties that have X11 types to be 'long'
   » #1409 - Use G_SIGNAL_RUN_LAST with ::queue-redraw signal
   » #1410 - [patch] Implements a generic ClutterActorClone class without fbos
   » #1414 - avoid relayout of ClutterTexture if not syncing size
   » #1415 - short-circuit setting same clip again

Clutter 0.8.2 (25/09/2008)
===============================================================================

 • List of changes between 0.8.0 and 0.8.2

   » Add constructor-only properties for the :container and :actor
     properties of ClutterChildMeta
   » Resync the Clutter keysyms with X.org ones.
   » Documentation fixes and improvements
   » Allow defining ClutterColor as an object or an array inside
     ClutterScript UI definitions
   » Added the missing :perspective property to ClutterStage
   » Fixed the upper and lower boundaries for ClutterUnit and
     ClutterFixed properties
   » Fix a bug that prevented disabling sorting on ClutterModel
   » Fix a bug in clutter_timeline_list_markers()
   » Queue a redraw when the clip is changed
   » Optimize calls to push and pop the matrix when painting
   » Add a variable to the pkgconfig file for extracting the
     COGL backend, for configure-time checks
   » Fix a typo in cogl_path_rel_curve_to()
   » Fix showing the cursor after it being hidden once
   » Add a function for obtaining Clutter's option group without
     initializing Clutter

 • List of bugs fixed since 0.8.0

   » #856 - Teardown sequence is borked
   » #945 - Clipping+fbo cloning bugs
   » #1010 - ClutterLabel does not update the layout (again)
   » #1020 - TFP resyncing on MapNotify/ConfigureNotify [Andy Wingo]
   » #1033 - Manually parsing command line options prevents
     initializing clutter
   » #1034 - Picking doesn't work on Eee PC
   » #1038 - Clutter 0.8 won't build due to redefined functions
   » #1044 - cogl_get_viewport error
   » #1047 - API documentation from release tarball is not
     installed by "make install" [Mirco Müller]
   » #1048 - SIGFPE in cogl_texture_set_region() with
     nvidia [Gwenole Beauchesne]
   » #1062 - clutter_actor_query_coords() replacement in
     0.8 [Gwenole Beauchesne]
   » #1069 - Warnings with ClutterScore
   » #1071 - clutter_timeline_get_duration doesn't always work
   » #1075 - Difficult to bind clutter_stage_new
   » #1080 - clutter_stage_read_pixels has upside-down y coordinate
   » #1082 - Texture bitmap is destroyed in wrong way
   » #1085 - Cursor is in wrong position on ClutterEntry if set
     x-align property
   » #1090 - Label somtimes returns natural_width < min_width [Johan Bilien]
   » #1091 - WM_MOUSEWHEEL (scroll-event) not handled
     correctly [Roman Yazmin]
   » #1099 - No ClutterScript API to get a list of IDs in a given
     file [Noah Gibbs]
   » #1100 - WM_SIZE not handled correctly, user_resize and
     window_style correction
   » #1103 - Two typos in clutter documentation
   » #1121 - Setting anchor point doesn't work if set too early
   » #1124 - Clutter causes an additional size request in each
     allocation [Johan Bilien]
   » #1125 - Save an extra pango_layout_get_size in many
     cases [Johan Bilien]
   » #1130 - CLUTTER_MOTION is not emitted when time goes
     backwards. [Pierce Liu]
   » #1137 - Setting the anchor point does not trigger a re-paint
   » #1145 - Flicker on resize the window
   » #1154 - clutter_timeout_pool_new() documentation doesn't say
     how to free [Murray Cumming]

Clutter 0.8.0 (10/07/2008)
===============================================================================

 • List of changes between 0.7.6 and 0.8.0

   » Assume that non-power-of-two sized textures are always supported
     if texture-from-pixmap support is present.

   » Increase documentation coverage.

   » Disable the XINPUT support by default.

   » Improve the behaviour of clutter_actor_get_transformed_size().

   » Fix a copy-and-paste bug which broke the vertex shaders.

 • List of bugs fixed since 0.7.6

   » #983 - cogl-bitmap-fallback.c compiler error/warning due to cast issue
   » #985 - MSC math.h / M_PI issue
   » #998 - clutter always captures X input events
   » #1000 - clutter-x11 should define gtypes for its enumerations
   » #1004 - Fix "edge-detect" shader
   » #1007 - Fix TFP fallback mechanism
   » #1008 - tfp still a bit borked
   » #1010 - ClutterLabel does not update the layout
   » #1011 - Fix TFP fallback mechanism (take 2)
   » #1012 - clutter_stage_read_pixels() has incorrect alpha data
             on some (most?) cards"
   » #1013 - Per device grabs are not obeyed in pointer device propagation.
   » #1015 - Cloning unparented actors with FBOs doesn't work with new
             layout code
   » #1016 - Changing window-redirect-automatic property after creating
             ClutterX11TexturePixmap doesn't work
   » #1019 - clutter-frame-source.h not included by clutter.h
   » #1022 - extern inline functions in clutter-fixed.h
   » #1033 - Manually parsing command line options prevents initializing
             Clutter

Clutter 0.7.6 (27/06/2008)
===============================================================================

 • List of changes between 0.7.4 and 0.7.6

   » Removed the ClutterBackend::get_display_size() and wrappers.

   » Verify that the vertex shaders are successfully compiled when binding
     them.

   » Increase safety of the ClutterGLXTexturePixmap

 • List of bugs fixed since 0.7.4

   » #993 - Underline colors are sometimes wrong

Clutter 0.7.4 (25/06/2008), "Killer Koi"
===============================================================================

 • List of changes between 0.7.2 and 0.7.4

   » Fix the ClutterEntry actor after the clip API changes in COGL.

   » Update the shaders generated for GLES 2.0.

   » Add the ability to add search paths and look up files from
     ClutterScript. This allows defining directories to store the
     images to be loaded by a ClutterTexture.

   » Fix the GLES 1.1 support.

   » Warn if no usable pointer device are available on X11 backends.

   » Improve the request for the best pixel format on win32.

   » Fix a regression when sizing the ClutterStage on backends that
     only support fixed size stages; now setting any size will result
     in Clutter ignoring the request, like it happened in Clutter 0.6.

   » Add a method to ClutterBackend to retrieve the display size.

   » Fix clutter_sinx() for angles > CFX_2PI - CFX_ONE.

 • List of bugs fixed

   » #833 - ClutterEntry should clip glyphs rather than itself
   » #858 - Support for multiple devices (using XINPUT)
   » #879 - sampler2DRect used by test-shader.c doen't work with non-rect textures
   » #979 - Wrong call convension for SwapIntervalProc in win32 backend
   » #987 - clutter-event.c c99 variable declaration
   » #988 - cursor position wrong with multibyte invisible char
   » #989 - Add a search path for clutter script assets

Clutter 0.7.2 (23/06/2008), "Kedoke"
===============================================================================

 • List of changes between 0.7.0 and 0.7.2

   » ClutterTexture has a new :keep-aspect-ratio property; when it is set
     to TRUE the texture will return a preferred width maintaining the
     aspect ratio with the given height and a preferred height maintaining
     the aspect ratio with the given width. This allows to set the width or
     the height and have the texture automatically request the height or the
     width respectively while maintaining the aspect ratio of the original
     image.

   » Added XINPUT support on the X11 backends; this provides an initial
     support for multiple input devices. The API is X11-specific, and
     provides support for querying at run-time support for XINPUT, for
     getting a list of input devices and for getting the type of each
     input device. 
 
   » The 'fruity' backend also features multiple device support.

 • List of bugs fixed

   » #816 - clutter_actor_request_coords() should take a const box.
   » #836 - Optimize clutter_label_query_coords()
   » #905 - Paint cursor directly
   » #918 - Group doesn't clip if it's children are clipped
   » #953 - Actors are not hidden before unrealized or disposed
   » #960 - PangoContext creation code should not be duplicated
   » #970 - clutter_actor_get_paint_area confusion
   » #971 - Minor ClutterActor cleanups
   » #972 - Better parenting
   » #973 - unreffing ClutterScore may segfault
   » #981 - clutter_stage_read_pixels temprow fix
   » #982 - __COGL_GET_CONTEXT MS compiler issue
   » #984 - pango_clutter_render_layout() declared void

Clutter 0.7.0 (13/06/2008), "Booska"
===============================================================================

 • List of changes between 0.6 and 0.7.0

   » COGL, the underlying GL abstraction layer in Clutter, has been
     completely rewritten from the ground up. Its no longer a conceptual
     hack but a documented, fully featured library pretty much in its
     own right. COGL abstracts over Open GL, Open GL ES 1.1 and now
     OpenGL ES 2.0, providing a smart uniform API over these libraries
     with various utility features such as texture tiling abstractions,
     paths and primitive rendering, FBO, shaders, etc.

   » Clutter now provides an experimental backend for the Apple(tm)
     iPhone and iPod Touch families of products.

   » The Windows platform is now natively supported instead of
     relying on the SDL libraries. The win32 backend is still
     experimental.

   » The X11 based backends now feature support for Actors that wrap
     external X drawables (i.e the texture-from-pixmap extension and
     fallbacks)

   » Clutter now seamlessly supports multiple stages on the backends
     that allow this feature.

   » The custom Pango renderer has been completely rewritten, now using
     the more modern and maintained PangoCairo (instead of FT2), and avoids
     nasty subclassing hacks, supports smooth fast scaling of text, has
     many edge case issues fixed and it still is very efficient (using
     a texture glyph cache). It is even a little bit faster.

   » Better texture support, timeline improvements, ClutterLabel and
     ClutterEntry improvements, and container child properties are among
     the new features - too many to fit in the NEWS file.

 • List of bug fixes

   » #358 - "window resizing doesn't show scaled stage"
   » #425 - "COGL enhancements"
   » #439 - "timing related pong lockup due to timeline_rewind somtimes
            being ignored by timeline_timeout_func"
   » #450 - "ClutterScore API enhancements"
   » #641 - "add markers to timelines"
   » #666 - "Large font size leads to missing ""W"" and wrong ""J"" character"
   » #713 - "texture from pixmap"
   » #791 - "default actors to visible"
   » #800 - "CLUTTER_ALPHA_EXP_INC overflows"
   » #804 - "clutter_actor_get_opacity returns composited alpha"
   » #810 - "100 % CPU load with clutter_main()"
   » #815 - "Split up request
   » #816 - "clutter_actor_request_coords() should take a const box."
   » #822 - "Fix clutter_actor_lower()"
   » #823 - "Clean-up GLism's in clutter-core (below cogl)"
   » #824 - "ClutterEntry should handle its own key events"
   » #825 - "Removes GLisms from clutter-main.c"
   » #831 - "configure.ac missing osx flavour help"
   » #834 - "add ability to set anchor in json"
   » #836 - "Optimize clutter_label_query_coords()"
   » #839 - "Crash if put cursor over topmost pixel"
   » #840 - "Implement prepare-paint and finish-paint signals."
   » #848 - "Events dispatch doesn't work in GLX Xephyr"
   » #850 - "Impossible to set ClutterRectangle border opacity to a value
            different from the surface opacity"
   » #857 - "cogl_color doesn't work in PowerVR PC Viewer"
   » #860 - "ClutterAlpha leaks"
   » #864 - "Allow instantiating and subclassing of ClutterStage"
   » #871 - "Two problems with closing stages"
   » #873 - "clutter_x11/glx_texture_pixmap issues"
   » #874 - "Clipping on GL ES"
   » #875 - "Clutter Label Issues"
   » #881 - "Timelines require precise system timing"
   » #882 - "Allow child properties for containers implementing the
            ClutterContainer interface"
   » #884 - "Add clutter_alpha_set_closure"
   » #889 - "Error when building clutter-ivan with eglx"
   » #891 - "assertion failed when test-behave exits"
   » #892 - "Incorrect results using  rotation-[center|angle] properties"
   » #894 - "Artifacts with the pango renderer"
   » #900 - "clutter_actor_lower() and friends do not queue redraw"
   » #906 - "Implement timing of the events"
   » #908 - "Support transform from G_TYPE_INT to ClutterUnit"
   » #909 - "OSX: missing NULL pointer handling"
   » #910 - "OSX: missing memory pool"
   » #911 - "OSX: add multistage support"
   » #912 - "Invalid use of int• as parameter for glGetIntegerv"
   » #913 - "cogl fails to build on OSX"
   » #914 - "ClutterEntry is confused about characters vs. bytes"
   » #915 - "clutter_entry_set_max_length(-1) misbehaves"
   » #916 - "ClutterKeyEvent:unicode_value is ignored"
   » #919 - "Replacement pango renderer"
   » #927 - "Created ports for clutter
   » #928 - "Reparenting a child that itself is a container doesn't work"
   » #930 - "add support for quartz imagebackend"
   » #931 - "suspicious size allocation for pixel data"
   » #933 - ""X Error of failed request" when attempting to call
            clutter_actor_request_coords()"
   » #934 - "Update clutter-tutorial to build with clutter from svn trunk."
   » #947 - "Destroying a stage is messy"
   » #948 - "Remove texture rectangle support"
   » #950 - "AltGr not handled"
   » #951 - "Fix clutter_entry_init() in trunk"
   » #952 - "Fix test-textures in trunk"
   » #953 - "Actors are not hidden before unrealized or disposed"
   » #955 - "ClutterLabel is missing fallback resolution handling"
   » #959 - "Multiple minor improvements"
   » #960 - "PangoContext creation code should not be duplicated"
   » #961 - "Fails to build on OSX (query/request_coords is gone)"
   » #964 - """unrealized"" signal of ClutterActor wrongly named"

Clutter 0.6.0 (18/02/2008)
==========================

 • List of changes between 0.5.6 and 0.6.0

   » New documentation sections inside the API reference, describing
     the animation framework.

   » New API in ClutterActor for computing the actor's vertices in
     the plane of a given ancestor and accessors to query whether an
     actor is scaled or rotated

 • List of bug fixed

   » #613 - Extend point transformation API
   » #779 - Rounding error in ClutterBehaviourScale [Havoc Pennington]
   » #787 - tiled textures are broken
   » #796 - segmentation fault when setting label text

Clutter 0.5.6 (11/02/2008)
==========================

 • List of changes between 0.5.4 and 0.5.6

   » Reverted a last minute change in the depth sorting function of
     ClutterGroup.

   » Added the clutter_actor_move_anchor_point() family of functions,
     which will set the anchor point at the given coordinates while
     adjusting the actor postion so that the relative position of the
     actor toward its parent remains the same.

   » Provide a fallback for finding the Clutter alpha functions inside
     a UI definition for ClutterScript in case g_module_open() fails.

   » Add initial Frame Buffer Objects support in ClutterTexture; using
     FBOs, where supported by the hardware and drivers, it's possible to
     create a ClutterTexture from any actor.

 • List of bugs fixed

   » #386 - Stage is white unless a timeline is present
   » #439 - timing related pong lockup due to timeline rewind...
   » #440 - 1 pixel line flickering
   » #442 - Shader support
   » #451 - Improve font rendering quality (Pango)
   » #452 - Textures are shown with distortion on Solaris/SPARC
   » #526 - OSX backend
   » #533 - Clutter stage is not shown under some conditions
   » #540 - ClutterStage isn't always respecting requests to change size
   » #549 - Backend offscreen API is broken
   » #613 - Extend point transformation API
   » #635 - Fix buffer overflow in clutter_texture_get_pixbuf() [Gwenole
     Beauchesne]
   » #643 - Superfluous "filter-quality" setting in texture_upload_data()?
     [Gwenole Beauchesne]
   » #689 - Rotating actor through layers does not handle opacity
     correctly [Josh Stewart]
   » #710 - Make "box-blur" test shader work in some way [Gwenole Beauchesne]
   » #719 - X11 backend does not check window field in events [Havoc
     Pennington]
   » #724 - ClutterLabel reports wrong height when lines > 1
   » #749 - "reactive" property does not change
   » #751 - missing XSync in clutter-event-x11.c:xembed_set_info() [Havoc
     Pennington]
   » #756 - clutter_actor_get_abs_size returns bogus values
   » #769 - OSX backend fails to build
   » #770 - OSX: passing incompatible pointer type

Clutter 0.5.4 (25/01/2008)
==========================

 • List of changes between 0.5.2 and 0.5.4

   » A clutter-x11-<major>.<minor> pkg-config file is installed along
     with the clutter-<major>.<minor> and clutter-<backend>-<major>.<minor>
     ones, for libraries and applications depending on the X11-based
     backends (GLX and EGLX).

   » Textures are correctly unrealized before changing and freeing the
     main GL context.

   » It is now possible to block the automatic call to clutter_main_quit()
     when closing the stage window using the frame controls by connecting
     an handler for the ::event signal on the Clutter stage and checking
     for the CLUTTER_DELETE event type and returning TRUE. This allows
     the usage of other main loops with GLib reactors (like Python's twisted)
     with Clutter without triggering assertions by closing the stage window.

 • List of bugs fixed

   » #564 - Add more precise clutter_qdivx() [Gwenole Beauchesne]
   » #614 - ClutterActor API inconsistencies
   » #640 - ClutterTexture unrealized with no GL context
   » #654 - Under heavy load clutter sometimes drops the last frame of
     a timeline [Johan Bilien]
   » #672 - Event handling in osx backend is broken [Tommi Komulainen]
   » #684 - Improve test-scale by also using anchor point [Jaap A. Haitsma]
   » #695 - clutter-shader: Invalid format string for
     gssize [Tommi Komulainen]
   » #696 - cogl_get_proc_address requires GLX [Tommi Komulainen]
   » #709 - clutter_effect_scale inconsistent with clutter_actor_set_scale
   » #714 - clutter_event_copy for enter/leave event generates
     extra unref [Neil Roberts]
   » #715 - Type errors in test-shader
   » #720 - BehaviourScale not working in python after recent
     API change [Josh Stewart]

Clutter 0.5.2 (14/01/2008)
==========================

 • List of changes between 0.5.0 and 0.5.2

   » ClutterModelDefault has been renamed to ClutterListModel

   » ClutterModel now has vector-based variants for append, prepend and
     insert methods; these methods are useful for bindings

   » Add units-based variant for clutter_actor_move_by()

 • List of bugs fixed

   » #694 - Handle GLhandleARB on OS X [Tommi Komulainen]
   » #700 - Fix for clutter_effect_rotate() [Neil Roberts]

Clutter 0.5.0 (02/01/2008)
==========================

 • List of changes between 0.4.2 and 0.5.0

   » New event handling system: every actor with the CLUTTER_ACTOR_REACTIVE
     flag set will receive events from the underlying backend; the event
     propagation chain will be walked in two directions (from the actor to
     the top-level container and back) with the ability to block it in
     both phases.

   » ClutterShader, an abstraction over the programmable OpenGL pipeline.

   » ClutterScore, an object for controlling timelines; using a score
     instance is possible to start multiple timelines at once, or start
     a timeline after another has emitted the ::complete signal.

   » ClutterScript, an object for parsing a scene from an external file or
     a buffer; the scene is described using JSON (JavaScript Object Notation):
     every object is defined using its class and properties, and container
     objects can have their children defined as well. It is also possible
     do describe top-level objects such as timelines and behaviours, and to
     automatically connect signal handlers to signal names.

   » ClutterTimelines duration can now be set in milliseconds using the
     :duration property; the default framerate will be used to compute the
     actual duration in frames. The default framerate will be set by the
     backend, and can be overridden by the application.

   » ClutterTimelines direction can now be set using the :direction
     property; a timeline can be set to proceed forward or backward,
     and the direction can also be change while the timeline is still
     running.

   » New, experimental OSX backend.

   » Build environment for MS VisualStudio 2005.

   » ClutterModel, a generic list-based model object that can be used to
     implement actors following the Model-Viewer-Controller design pattern.
     Clutter provides a default implementation of ClutterModel, called
     ClutterModelDefault and using the GSequence data structure from GLib
     to optimize insertion and look up.

   » Add the ability to grab pointer and keyboard events: if an actor
     is set to have a grab it'll be the only one receiving events until
     it releases the grab.

   » Add the ability for an actor to receive the key focus; an actor
     with key focus will always receive the key events, even if it did
     not acquire the keyboard grab.

   » It is now possible to set the GL "fog" (also known as "depth cueing")
     effect on the ClutterStage; if the fog is enabled, actors farther
     away from the view point will fade into the stage background color.

   » Each actor now has an "anchor point", a point defined in the actor's
     coordinate space that will be used as the origin when scaling and
     rotation transformations.

   » Every pixel-based API has been doubled with a corresponding
     ClutterUnits-based function (postfixed with a '-u'), for instance:

       clutter_actor_set_position() - clutter_actor_set_positionu()
       clutter_actor_set_size()     - clutter_actor_set_sizeu()
       clutter_actor_set_depth()    - clutter_actor_set_depthu()

     This allows sub-pixel precision and device independence.

   » The ClutterLabel actor now tries very hard to provide a sane
     default size, if no bounding box has been requested; this fixes
     the :alignment property and allows the addition of the :justify
     property.

   » The SDL backend can now be compiled under win32 with MingW; this
     backend is still marked as experimental.

   » The OSX backend allows the compilation of Clutter under OS X; this
     backend is experimental.

 • List of bugs fixed

   » #423 - All actors should emit events rather than just the stage
   » #424 - Interface definition files
   » #443 - ClutterModel implementation
   » #480 - Uninitialized variable in
     path_alpha_to_position() [Gwenole Beauchesne]
   » #511 - clutter_stage_get_actor_at_pos problem
   » #512 - clutter window moves when stage actor is scaled
   » #518 - XEMBED not supported in eglx backend
   » #519 - Should have an Atom cache initialized on start up
   » #520 - Delete after multibyte unicode chars in
     ClutterEntry [Tommi Komulainen]
   » #522 - Array out of bounds indexing [Tommi Komulainen]
   » #523 - cogl portability fixes [Tommi Komulainen]
   » #524 - missing config.h includes [Tommi Komulainen]
   » #525 - Redundant include in cogl/gl [Tommi Komulainen]
   » #531 - Extraneous "new-frame" signal generated
   » #532 - clutter_actor_set_scale_with_gravityx()
     precision [Gwenole Beauchesne]
   » #544 - clutter_color_to_hlsx is broken [Neil Roberts]
   » #546 - ClutterStageState doesn't make sense
   » #550 - Wanted: Set Actor's position based on center or other
     edges/corners of quadrangle
   » #557 - ClutterScript should support complex properties for third
     party classes
   » #558 - Unmerge UI definitions
   » #566 - ClutterEntry does not scroll the text to the
     right [Gwenole Beauchesne]
   » #577 - Inconsistent naming of behaviour properties
   » #580 - Fix call to cogl_enable() [Gwenole Beauchesne]
   » #582 - api naming inconsistence between
            clutter_behaviour_path_append_knots and
            clutter_behaviour_bspline_append
   » #584 - Typo on clutter_effect_rotate_x documentation page
   » #592 - Fix build on trunk [Gwenole Beauchesne]
   » #596 - ClutterTexture tileing logic is a little borked
   » #597 - ClutterGroups not pickable
   » #600 - fix ClutterLabel layout computing when no box has been set
   » #604 - Color param for Label constructor should be
     const [Jonathon Jongsma]
   » #606 - enable depth test in GL
   » #608 - Control motion events frequency
   » #614 - ClutterActor API inconsistencies
   » #616 - ClutterTexture doesn't respect width set from clutterscript
   » #617 - ClutterEffect Improvements
   » #618 - ClutterScript name/id confusion
   » #619 - clutter_behavior_rotate angle properties should accept
     negative values
   » #628 - clutter_actor_rotate_x() is a setter, not a modifier
   » #629 - There is no clutter_actor_get_position()
   » #634 - clutter_behaviour_path_new() documentation unclear
   » #637 - add depth cueing support to the stage
   » #645 - Fix crash in clutter_label_new_full() [Gwenole Beauchesne]
   » #647 - Cannot hide the stage
   » #648 - Hidden fullscreen stage doesn't come back as fullscreen
   » #652 - reference needed on actor being source of last motion_event
   » #661 - clutter_actor_set_width() documentation is vague
   » #662 - clutter_actor_set_opacity() documentation doesn't describe values
   » #665 - ClutterBehaviourEllipse tilts are broken
   » #670 - Fix clutter_container_lower_child() [Gwenole Beauchesne]
   » #673 - ClutterActor "captured-events" signal documentation wrong
   » #674 - ClutterActor::get_depth() and set_depth() vfuncs not
     used [Murray Cumming]
   » #675 - update subregions of cluttertextures
   » #678 - ClutterLabel size allocation still bogus

Clutter 0.4.0 (07/08/2007)
========================

 • List of changes between 0.3.1 and 0.4.0

   » Many documentation additions and improvements.

   » Display DPI now honours on backends its can be queried.

   » Various big endian related fixes.

   » ClutterBehaviourEllipse and ClutterBehaviourRotate API and
   internals improvements.

   » Add basic tslib support to eglnative backend (for touchscreen events)

   » clutter_stage_get_actor_at_pos should now work on 16bpp displays.

   » New ClutterEffect rotation calls.

   » Allowing user resizing of the stage now optional.
    (implemented by glx backend only currently)

   » ClutterEntry UTF8 fixes and improved automatic initial sizing.

   » Make ClutterActor GInitiallyUnowned.

   » New ClutterBox API: each box has now a colour and a margin (distance
     between the inner-border and the children); plus, each packed child
     has a padding. Margins and paddings are expressed in ClutterUnits,
     to ease the transition to the device independent units. You can use
     clutter_box_set_default_padding() if you want the same padding for
     each child.

 • List of bug fixed
   » #390 - clutter_stage_get_actor_at_pos broken on 16bpp displays.
   » #398 - inconsistent type for return value of clutter_event_get_state
   » #403 - Critical error when removing texture actor
   » #404 - Solaris build error with OpenGL, missing
            GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB and GL_TEXTURE_RECTANGLE_ARB
   » #409 - depth mismatch between visual (32) and window (24)
   » #407 - metadata-available signal #ifdef'ed out
   » #413 - Clutter compile error with Sun Studio C compiler
   » #426 - typo in sdl_backend
   » #414 - ClutterEntry invisible if size not set
   » #434 - clutter_color_from_pixel incorrectly interprets alpha value
   » #435 - clutter_color_subtract does the opposite of its documentation
   » #436 - clutter-behaviour-depth always perform "from deep to shallow"

Clutter 0.3.1 (06/07/2007)
========================

 • List of changes between 0.3 and 0.3.1
   » EGL. There are now 2 experimental EGL backends;
     - 'eglx', the former EGL on X11 implementation (now renamed)
     - 'eglnative', a new EGL 'native' backend which supporting non
       X11 EGL implementations (i.e framebuffer).

   » ClutterGroup now returns correct size when a child is removed.

   » Missing redhand.png added to distro tarball (fixing tests that require
     it)

   » Fix picking in ClutterBox

   » Rectangle border creation fixed.

   » Fix overflow in Exponential Alpha funcs.

   » Many API documentation fixes and improvements.

   » ClutterEffect cleanups.

   » ClutterEntry cleanups.

   » Check for versioned XFixes library (GLX backend).

   » More X error traps in GLX backend.

Clutter 0.3 (29/06/2007)
========================

 • List of changes between 0.2.3 and 0.3
   » Clutter now supports both switchable windowing system and GL backends.
     Window systems supported include GLX, EGL and SDL.

     GL support includes OpenGL 1.2+ and OpenGL ES 1.1. This is
     provided by a small basic abstraction layer 'cogl.h'. Cogl is not
     yet documented - usage external to Clutter is not yet advised.

     Backends may provide specific command line options.

     Notes;

     GLX
     ---
     The GLX backend is built by default and is currently the most
     developed, supported and featured windowing system backend. Only
     OpenGL is supported via GLX.

     SDL
     ---
     Clutter has experimental support for using SDL. Open GL is supported as
     is OpenGL ES via Dogles (very experimental).

     EGL
     ---
     Clutter has experimental support for using EGL. Only Open GL ES
     is supported by EGL.

     EGL support assumes an EGL implementation running atop X Windows.

     Open GL ES.
     -----------

     Clutter now has experimental support for Open GL ES.
     Current known issues;

     + Unrealising a ClutterTexture will not move pixel data from video
       into system memory but simply destroy it.
     + BGRA, YUV Texture data not currently supported.

     (Use the clutter_feature API to probe for above at runtime)

     Open Source ES implementations this has been tested against
     include `Vincent' and `dgles'.  Support for commerical
     implementations may require modifications to the configure.ac
     script.

     vincent: http://ogl-es.sourceforge.net/
              (Also see: http://svn.o-hand.com/repos/misc/trunk/ogles/ )

     dgles: http://developer.hybrid.fi/dgles/index.html

   » New ClutterEffect class provides a simplified (and thus less flexible)
     API wrapping around behaviours, alphas and timelines.
   » New Behaviours - bspline, ellipsis, rotation.
   » New built in Alpha functions;
      CLUTTER_ALPHA_SINE_INC
      CLUTTER_ALPHA_SINE_DEC
      CLUTTER_ALPHA_SINE_HALF
      CLUTTER_ALPHA_SQUARE
      CLUTTER_ALPHA_SMOOTHSTEP_INC
      CLUTTER_ALPHA_SMOOTHSTEP_DEC
      CLUTTER_ALPHA_EXP_INC
      CLUTTER_ALPHA_EXP_DEC
   » New Actors and interfaces
     + ClutterLayout, for writing extended layout support in actors
     + ClutterContainer, for generic container actors
     + ClutterBox, ClutterVBox and ClutterHBox layout actors.
     + ClutterEntry, text entry actor
   » ClutterTexture now handles BGRA, YUV and premultiplied alpha data.
   » All internal math now fixed point based.
   » Clutter now has it own internal event queue.
   » ClutterStage new features;
     + Title property for naming in window decorations.
     + Perspective setting - The stages perspective can now be modified.
   » New Clutter_actor •project API calls allow for querying of tranformed
     actor vertices and points.
   » New Clutter Feature checks.
   » Initial ClutterUnit implementation for device independant positioning.
 • List of Bugs fixed
   » Various issues with very poor performance and Intel drivers.
   » #138 Fix typo in x rotation transform.

Clutter 0.2.3 (2007-04-11)
==========================

 • List of changed between 0.2.2 and 0.2.3
   » Fixes to tile based textures and again clutter_texture_get_pixbuf(). [Matthew]
   » Implement Gravity for ClutterScaleBehaviour. [Matthew, Rob]

Clutter 0.2.2 (2007-03-22)
==========================

 • List of changed between 0.2.1 and 0.2.2
   » Addition of basic XEMBED support for clutter stage. [Matthew]
   » Fixes to clutter_texture_get_pixbuf(). [Matthew]
   » Export clutter_group_remove_all and add associated fixes. [Matthew]

Clutter 0.2.1 (2007-02-07)
==========================

 • List of changed between 0.2.0 and 0.2.1
   » Add even faster double to integer (and back) conversion
     functions. [Tomas]
   » Fix some errors in the fixed point sine waveform
     function. [Tomas]
   » Use fixed point math in the Pango renderer. [Tomas]
   » Improve the GL version check. [Matthew]
   » Add a square waveform function. [Emmanuele]
 • List of bugs fixed
   » #215 - macro CLUTTER_MARK() not disabled for non-debug builds

Clutter 0.2 (18-01-2007)
========================

 • List of changes between 0.2 and 0.1
   » Bindings, GStreamer and GTK+ dependencies moved out of tree:
     now Clutter strictly depends on Xlibs, OpenGL and GdkPixbuf only.
   » Actors now have an initial floating reference; this means you
     don't have to explicitely unref them: every memory an actor
     allocates will be freed when the group containing the actor will
     be destroyed.
   » Add basic run-time detection of GL features.
     + Use GL_TEXTURE_RECTANGLE_ARB if available.
     + Attempt to set up sync to vblank (set CLUTTER_VBLANK=none to disable)
   » Add API for behaviours. A ClutterBehaviour is an object which
     drives a set of actors using one or more properties depending
     on the value of an "alpha" function.
     + Provide simple behaviours: ClutterBehaviourOpacity,
       ClutterBehaviourPath and ClutterBehaviourScale.
     + Provide simple alpha functions for ramps and sine waveforms.
   » Add fixed point API for embedded platforms with no FPU.
   » Add support for command line switches to Clutter, like debug
     flags and abort on warnings; also allow application to hook up
     into the initialisation sequence to add their own command line
     switches.
   » Add Pango GL renderer for Clutter, and use it to render text
     inside the ClutterLabel actor; this decrease texture memory
     usage.
   » Redo Clutter Label widget, using the new Pango renderer.
   » Clutter Textures do not store local pixbuf copy (of texture).
   » Redo group and actor scale/sizing API and functionality.
   » Add memory management API for ClutterColor, and string parsing.
 • List of bug fixed
   » #199 - Little group handling fix?
   » #198 - Detect NPOT support on more systems
   » #197 - Tiled textures are broken
   » #196 - Rebuild the examples when the library changes
   » #156 - clutter_actor_set_position not using the absolute size
   » #155 - Don't test for XInitThreads [Bastien Nocera]
   » #154 - Key presses not working in super-oh example [Bastien Nocera]
   » #152 - Misc fixes [Bastien Nocera]
   » #143 - Faulty ref-counting in clutter_group_remove [Frederic Riss]
   » #141 - Copy-pasto in clutter_media_set_volume [Frederic Riss]
   » #101 - No package 'x11' found -- wrong configure [Tomasz Torcz]
   »  #98 - Enabling trails in super-oh crashes

Clutter 0.1 (22/06/2006)
========================

 • First 'official' release, expect bugs aplenty.
 • Contains:
   » Hopefully enough functionality to build things.
   » Basic gstreamer 0.10 video playback support.
   » Fairly stable API, though in no way totally stable.
     Expect CHANGES in future versions.
   » Some simple examples ( also see OPT ).
   » An experimental GTK-Clutter widget.
   » Fairly complete Python bindings.
   » Non complete but hopefully useful API documentation.
 • If you want to help out see the TODO file.
